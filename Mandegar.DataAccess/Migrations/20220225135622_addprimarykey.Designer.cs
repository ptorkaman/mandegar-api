// <auto-generated />
using System;
using Mandegar.DataAccess;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Mandegar.DataAccess.Migrations
{
    [DbContext(typeof(MandegarDbContext))]
    [Migration("20220225135622_addprimarykey")]
    partial class addprimarykey
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.13")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Mandegar.Models.Entities.BaseInfo.AcademicYear", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CreatedById")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FromDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int?>("ModifiedById")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.Property<DateTime>("ToDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("CreatedById");

                    b.HasIndex("ModifiedById");

                    b.ToTable("AcademicYears");
                });

            modelBuilder.Entity("Mandegar.Models.Entities.BaseInfo.Class", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CreatedById")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int?>("ModifiedById")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.Property<int>("StudyGradeId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CreatedById");

                    b.HasIndex("ModifiedById");

                    b.HasIndex("StudyGradeId");

                    b.ToTable("Classes");
                });

            modelBuilder.Entity("Mandegar.Models.Entities.BaseInfo.Document", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CreatedById")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int?>("ModifiedById")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.Property<string>("Specific")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CreatedById");

                    b.HasIndex("ModifiedById");

                    b.ToTable("Documents");
                });

            modelBuilder.Entity("Mandegar.Models.Entities.BaseInfo.Event", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CreatedById")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("EventDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("EventTypeId")
                        .HasColumnType("int");

                    b.Property<int>("ExecutiveCalendarId")
                        .HasColumnType("int");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int?>("ModifiedById")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.HasKey("Id");

                    b.HasIndex("CreatedById");

                    b.HasIndex("EventTypeId");

                    b.HasIndex("ExecutiveCalendarId");

                    b.HasIndex("ModifiedById");

                    b.ToTable("Events");
                });

            modelBuilder.Entity("Mandegar.Models.Entities.BaseInfo.EventType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CreatedById")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int?>("ModifiedById")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.HasKey("Id");

                    b.HasIndex("CreatedById");

                    b.HasIndex("ModifiedById");

                    b.ToTable("EventTypes");
                });

            modelBuilder.Entity("Mandegar.Models.Entities.BaseInfo.ExecutiveCalendar", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AcademicYearId")
                        .HasColumnType("int");

                    b.Property<int>("CreatedById")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int?>("ModifiedById")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.HasKey("Id");

                    b.HasIndex("AcademicYearId");

                    b.HasIndex("CreatedById");

                    b.HasIndex("ModifiedById");

                    b.ToTable("ExecutiveCalendars");
                });

            modelBuilder.Entity("Mandegar.Models.Entities.BaseInfo.Lesson", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CreatedById")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("EducationCourseCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("LessonTypeId")
                        .HasColumnType("int");

                    b.Property<int?>("ModifiedById")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.Property<int>("StudyGradeId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CreatedById");

                    b.HasIndex("LessonTypeId");

                    b.HasIndex("ModifiedById");

                    b.HasIndex("StudyGradeId");

                    b.ToTable("Lessons");
                });

            modelBuilder.Entity("Mandegar.Models.Entities.BaseInfo.LessonType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CreatedById")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int?>("ModifiedById")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.HasKey("Id");

                    b.HasIndex("CreatedById");

                    b.HasIndex("ModifiedById");

                    b.ToTable("LessonTypes");
                });

            modelBuilder.Entity("Mandegar.Models.Entities.BaseInfo.StudyDegree", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CreatedById")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int?>("ModifiedById")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.HasKey("Id");

                    b.HasIndex("CreatedById");

                    b.HasIndex("ModifiedById");

                    b.ToTable("StudyDegrees");
                });

            modelBuilder.Entity("Mandegar.Models.Entities.BaseInfo.StudyField", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CreatedById")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int?>("ModifiedById")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.Property<int>("StudyDefreeId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CreatedById");

                    b.HasIndex("ModifiedById");

                    b.HasIndex("StudyDefreeId");

                    b.ToTable("StudyFields");
                });

            modelBuilder.Entity("Mandegar.Models.Entities.BaseInfo.StudyGrade", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CreatedById")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<int>("EducationBasicCode")
                        .HasColumnType("int");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int?>("ModifiedById")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.Property<int>("StudyFieldId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CreatedById");

                    b.HasIndex("ModifiedById");

                    b.HasIndex("StudyFieldId");

                    b.ToTable("StudyGrades");
                });

            modelBuilder.Entity("Mandegar.Models.Entities.BaseInfo.Topic", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CreatedById")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("LessonId")
                        .HasColumnType("int");

                    b.Property<int?>("ModifiedById")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.Property<string>("TopicCode")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CreatedById");

                    b.HasIndex("LessonId");

                    b.HasIndex("ModifiedById");

                    b.ToTable("Topics");
                });

            modelBuilder.Entity("Mandegar.Models.Entities.BaseInfo.YearClass", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AcademicYeardId")
                        .HasColumnType("int");

                    b.Property<int>("ClassId")
                        .HasColumnType("int");

                    b.Property<int>("CreatedById")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int?>("ModifiedById")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.HasKey("Id");

                    b.HasIndex("AcademicYeardId");

                    b.HasIndex("ClassId");

                    b.HasIndex("CreatedById");

                    b.HasIndex("ModifiedById");

                    b.ToTable("YearClasses");
                });

            modelBuilder.Entity("Mandegar.Models.Entities.Departments.Department", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CreatedById")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int?>("ModifiedById")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int?>("ParentId")
                        .HasColumnType("int");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.HasKey("Id");

                    b.HasIndex("CreatedById");

                    b.HasIndex("ModifiedById");

                    b.HasIndex("ParentId");

                    b.ToTable("Departments");
                });

            modelBuilder.Entity("Mandegar.Models.Entities.Departments.DepartmentActivity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ActivityDescription")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("AttachmentFile")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CreatedById")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<int>("DepartmentId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int?>("ModifiedById")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.HasKey("Id");

                    b.HasIndex("CreatedById");

                    b.HasIndex("DepartmentId");

                    b.HasIndex("ModifiedById");

                    b.ToTable("DepartmentActivities");
                });

            modelBuilder.Entity("Mandegar.Models.Entities.Departments.DepartmentActivityMember", b =>
                {
                    b.Property<int>("DepartmentMemberId")
                        .HasColumnType("int");

                    b.Property<int>("DepartmentActivityId")
                        .HasColumnType("int");

                    b.HasKey("DepartmentMemberId", "DepartmentActivityId");

                    b.HasIndex("DepartmentActivityId");

                    b.ToTable("DepartmentActivityMembers");
                });

            modelBuilder.Entity("Mandegar.Models.Entities.Departments.DepartmentActivityType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CreatedById")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int?>("ModifiedById")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.HasKey("Id");

                    b.HasIndex("CreatedById");

                    b.HasIndex("ModifiedById");

                    b.ToTable("DepartmentActivityTypes");
                });

            modelBuilder.Entity("Mandegar.Models.Entities.Departments.DepartmentEvaluationGroup", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CreatedById")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int?>("ModifiedById")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.HasKey("Id");

                    b.HasIndex("CreatedById");

                    b.HasIndex("ModifiedById");

                    b.ToTable("DepartmentEvaluationGroup");
                });

            modelBuilder.Entity("Mandegar.Models.Entities.Departments.DepartmentLesson", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<int>("DepartmentId")
                        .HasColumnType("int");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("LessonId")
                        .HasColumnType("int");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.HasKey("Id");

                    b.HasIndex("DepartmentId");

                    b.HasIndex("LessonId");

                    b.ToTable("DepartmentLessons");
                });

            modelBuilder.Entity("Mandegar.Models.Entities.Departments.DepartmentMeeting", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CreatedById")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<int>("DepartmentScheduleId")
                        .HasColumnType("int");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime>("MeetingDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("ModifiedById")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.HasKey("Id");

                    b.HasIndex("CreatedById");

                    b.HasIndex("DepartmentScheduleId");

                    b.HasIndex("ModifiedById");

                    b.ToTable("DepartmentMeetings");
                });

            modelBuilder.Entity("Mandegar.Models.Entities.Departments.DepartmentMeetingAttendees", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CreatedById")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<int>("DepartmentMeetingId")
                        .HasColumnType("int");

                    b.Property<int>("DepartmentMemberId")
                        .HasColumnType("int");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int?>("ModifiedById")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.HasKey("Id");

                    b.HasIndex("CreatedById");

                    b.HasIndex("DepartmentMeetingId");

                    b.HasIndex("DepartmentMemberId");

                    b.HasIndex("ModifiedById");

                    b.ToTable("DepartmentMeetingAttendees");
                });

            modelBuilder.Entity("Mandegar.Models.Entities.Departments.DepartmentMeetingMember", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CreatedById")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<int>("DepartmentId")
                        .HasColumnType("int");

                    b.Property<int>("DepartmentMeetingId")
                        .HasColumnType("int");

                    b.Property<int?>("DepartmentMemberId")
                        .HasColumnType("int");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int?>("ModifiedById")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.HasKey("Id");

                    b.HasIndex("CreatedById");

                    b.HasIndex("DepartmentId");

                    b.HasIndex("DepartmentMeetingId");

                    b.HasIndex("DepartmentMemberId");

                    b.HasIndex("ModifiedById");

                    b.ToTable("DepartmentMeetingMembers");
                });

            modelBuilder.Entity("Mandegar.Models.Entities.Departments.DepartmentMember", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CreatedById")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<int>("DepartmentId")
                        .HasColumnType("int");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int?>("ModifiedById")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<int>("PositionId")
                        .HasColumnType("int");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.Property<int>("StaffId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CreatedById");

                    b.HasIndex("DepartmentId");

                    b.HasIndex("ModifiedById");

                    b.HasIndex("PositionId");

                    b.HasIndex("StaffId");

                    b.ToTable("DepartmentMembers");
                });

            modelBuilder.Entity("Mandegar.Models.Entities.Departments.DepartmentSchedule", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CreatedById")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<int>("ExecutiveCalendarId")
                        .HasColumnType("int");

                    b.Property<DateTime>("FromDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int?>("ModifiedById")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.Property<string>("TimeLimit")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ToDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("CreatedById");

                    b.HasIndex("ExecutiveCalendarId");

                    b.HasIndex("ModifiedById");

                    b.ToTable("DepartmentSchedules");
                });

            modelBuilder.Entity("Mandegar.Models.Entities.Departments.EvaluationCourse", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CreatedById")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int?>("ModifiedById")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CreatedById");

                    b.HasIndex("ModifiedById");

                    b.ToTable("EvaluationCourses");
                });

            modelBuilder.Entity("Mandegar.Models.Entities.Departments.EvaluationIndicator", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CreatedById")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<int>("DepartmentEvaluationGroupId")
                        .HasColumnType("int");

                    b.Property<int>("DepartmentLessonId")
                        .HasColumnType("int");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int?>("ModifiedById")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Question")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.Property<int>("ScoreCeiling")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CreatedById");

                    b.HasIndex("DepartmentEvaluationGroupId");

                    b.HasIndex("DepartmentLessonId");

                    b.HasIndex("ModifiedById");

                    b.ToTable("EvaluationIndicators");
                });

            modelBuilder.Entity("Mandegar.Models.Entities.Departments.MeetingMember", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CreatedById")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<int>("DepartmentMeetingMemberId")
                        .HasColumnType("int");

                    b.Property<int>("DepartmentMemberId")
                        .HasColumnType("int");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int?>("ModifiedById")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.HasKey("Id");

                    b.HasIndex("CreatedById");

                    b.HasIndex("DepartmentMeetingMemberId");

                    b.HasIndex("DepartmentMemberId");

                    b.HasIndex("ModifiedById");

                    b.ToTable("MeetingMembers");
                });

            modelBuilder.Entity("Mandegar.Models.Entities.Departments.ProceedingsDepartment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Comments")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CreatedById")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<int>("DepartmentMeetingId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int?>("ModifiedById")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Programs")
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("CreatedById");

                    b.HasIndex("DepartmentMeetingId");

                    b.HasIndex("ModifiedById");

                    b.ToTable("ProceedingsDepartments");
                });

            modelBuilder.Entity("Mandegar.Models.Entities.Departments.SecretaryEvaluation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<int>("DepartmentEvaluationGroupId")
                        .HasColumnType("int");

                    b.Property<int>("DepartmentMemberId")
                        .HasColumnType("int");

                    b.Property<int>("EvaluationCourseId")
                        .HasColumnType("int");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.HasKey("Id");

                    b.HasIndex("DepartmentEvaluationGroupId");

                    b.HasIndex("DepartmentMemberId");

                    b.HasIndex("EvaluationCourseId");

                    b.ToTable("SecretaryEvaluation");
                });

            modelBuilder.Entity("Mandegar.Models.Entities.Departments.SecretaryScore", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CreatedById")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<int?>("EvaluationCourseId")
                        .HasColumnType("int");

                    b.Property<int?>("EvaluationIndicatorsId")
                        .HasColumnType("int");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int?>("ModifiedById")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.Property<int>("Score")
                        .HasColumnType("int");

                    b.Property<int?>("SecretaryEvaluationId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CreatedById");

                    b.HasIndex("EvaluationCourseId");

                    b.HasIndex("EvaluationIndicatorsId");

                    b.HasIndex("ModifiedById");

                    b.HasIndex("SecretaryEvaluationId");

                    b.ToTable("SecretaryScores");
                });

            modelBuilder.Entity("Mandegar.Models.Entities.Departments.SessionApprovals", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CreatedById")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Deadline")
                        .HasColumnType("datetime2");

                    b.Property<int>("DepartmentMeetingId")
                        .HasColumnType("int");

                    b.Property<int>("DepartmentMeetingMemberId")
                        .HasColumnType("int");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int?>("ModifiedById")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.Property<string>("Test")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CreatedById");

                    b.HasIndex("DepartmentMeetingId");

                    b.HasIndex("DepartmentMeetingMemberId");

                    b.HasIndex("ModifiedById");

                    b.ToTable("SessionApprovals");
                });

            modelBuilder.Entity("Mandegar.Models.Entities.Personeli.Activity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ActivityCaseId")
                        .HasColumnType("int");

                    b.Property<int>("ActivityTypeId")
                        .HasColumnType("int");

                    b.Property<int>("CreatedById")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int?>("ModifiedById")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("PublicationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("PublicationName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.Property<int>("StaffId")
                        .HasColumnType("int");

                    b.Property<string>("Subject")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("ActivityCaseId");

                    b.HasIndex("ActivityTypeId");

                    b.HasIndex("CreatedById");

                    b.HasIndex("ModifiedById");

                    b.HasIndex("StaffId");

                    b.ToTable("Activities");
                });

            modelBuilder.Entity("Mandegar.Models.Entities.Personeli.ActivityCase", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CreatedById")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int?>("ModifiedById")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.HasKey("Id");

                    b.HasIndex("CreatedById");

                    b.HasIndex("ModifiedById");

                    b.ToTable("ActivityCases");
                });

            modelBuilder.Entity("Mandegar.Models.Entities.Personeli.ActivityField", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CreatedById")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int?>("ModifiedById")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.HasKey("Id");

                    b.HasIndex("CreatedById");

                    b.HasIndex("ModifiedById");

                    b.ToTable("ActivityFields");
                });

            modelBuilder.Entity("Mandegar.Models.Entities.Personeli.ActivityType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CreatedById")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int?>("ModifiedById")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.HasKey("Id");

                    b.HasIndex("CreatedById");

                    b.HasIndex("ModifiedById");

                    b.ToTable("ActivityTypes");
                });

            modelBuilder.Entity("Mandegar.Models.Entities.Personeli.AddressType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CreatedById")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int?>("ModifiedById")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.HasKey("Id");

                    b.HasIndex("CreatedById");

                    b.HasIndex("ModifiedById");

                    b.ToTable("AddressTypes");
                });

            modelBuilder.Entity("Mandegar.Models.Entities.Personeli.AssignPosition", b =>
                {
                    b.Property<int>("StaffId")
                        .HasColumnType("int");

                    b.Property<int>("PositionId")
                        .HasColumnType("int");

                    b.HasKey("StaffId", "PositionId");

                    b.HasIndex("PositionId");

                    b.ToTable("AssignPositions");
                });

            modelBuilder.Entity("Mandegar.Models.Entities.Personeli.AssignTask", b =>
                {
                    b.Property<int>("TaskId")
                        .HasColumnType("int");

                    b.Property<int>("PositionId")
                        .HasColumnType("int");

                    b.HasKey("TaskId", "PositionId");

                    b.HasIndex("PositionId");

                    b.ToTable("AssignTasks");
                });

            modelBuilder.Entity("Mandegar.Models.Entities.Personeli.Bank", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CreatedById")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int?>("ModifiedById")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.HasKey("Id");

                    b.HasIndex("CreatedById");

                    b.HasIndex("ModifiedById");

                    b.ToTable("Banks");
                });

            modelBuilder.Entity("Mandegar.Models.Entities.Personeli.BloodType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CreatedById")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int?>("ModifiedById")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.HasKey("Id");

                    b.HasIndex("CreatedById");

                    b.HasIndex("ModifiedById");

                    b.ToTable("BloodTypes");
                });

            modelBuilder.Entity("Mandegar.Models.Entities.Personeli.City", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CreatedById")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int?>("ModifiedById")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("ProvinceId")
                        .HasColumnType("int");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.HasKey("Id");

                    b.HasIndex("CreatedById");

                    b.HasIndex("ModifiedById");

                    b.HasIndex("ProvinceId");

                    b.ToTable("Cities");
                });

            modelBuilder.Entity("Mandegar.Models.Entities.Personeli.Cooperation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("CooperationEndDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("CooperationStartDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("CooperationTypeId")
                        .HasColumnType("int");

                    b.Property<int>("CreatedById")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<int>("DepartmentId")
                        .HasColumnType("int");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int?>("ModifiedById")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.Property<int>("StaffId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CooperationTypeId");

                    b.HasIndex("CreatedById");

                    b.HasIndex("DepartmentId");

                    b.HasIndex("ModifiedById");

                    b.HasIndex("StaffId");

                    b.ToTable("Cooperations");
                });

            modelBuilder.Entity("Mandegar.Models.Entities.Personeli.CooperationType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CreatedById")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int?>("ModifiedById")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.HasKey("Id");

                    b.HasIndex("CreatedById");

                    b.HasIndex("ModifiedById");

                    b.ToTable("CooperationTypes");
                });

            modelBuilder.Entity("Mandegar.Models.Entities.Personeli.Country", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CreatedById")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int?>("ModifiedById")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.HasKey("Id");

                    b.HasIndex("CreatedById");

                    b.HasIndex("ModifiedById");

                    b.ToTable("Countries");
                });

            modelBuilder.Entity("Mandegar.Models.Entities.Personeli.Education", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CreatedById")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int?>("ModifiedById")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.HasKey("Id");

                    b.HasIndex("CreatedById");

                    b.HasIndex("ModifiedById");

                    b.ToTable("Educations");
                });

            modelBuilder.Entity("Mandegar.Models.Entities.Personeli.EducationalQualification", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CourseName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("CreatedById")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DegreeReceiptDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("DocumentId")
                        .HasColumnType("int");

                    b.Property<int>("EducationId")
                        .HasColumnType("int");

                    b.Property<string>("InstitutionName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int?>("ModifiedById")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<int>("Period")
                        .HasColumnType("int");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.Property<int>("StaffId")
                        .HasColumnType("int");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("CreatedById");

                    b.HasIndex("DocumentId");

                    b.HasIndex("EducationId");

                    b.HasIndex("ModifiedById");

                    b.HasIndex("StaffId");

                    b.ToTable("EducationalQualifications");
                });

            modelBuilder.Entity("Mandegar.Models.Entities.Personeli.InsuranceType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CreatedById")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int?>("ModifiedById")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.HasKey("Id");

                    b.HasIndex("CreatedById");

                    b.HasIndex("ModifiedById");

                    b.ToTable("InsuranceTypes");
                });

            modelBuilder.Entity("Mandegar.Models.Entities.Personeli.MaritalStatus", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CreatedById")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int?>("ModifiedById")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.HasKey("Id");

                    b.HasIndex("CreatedById");

                    b.HasIndex("ModifiedById");

                    b.ToTable("MaritalStatuses");
                });

            modelBuilder.Entity("Mandegar.Models.Entities.Personeli.MilitaryServiceStatus", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CreatedById")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int?>("ModifiedById")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.HasKey("Id");

                    b.HasIndex("CreatedById");

                    b.HasIndex("ModifiedById");

                    b.ToTable("MilitaryServiceStatuses");
                });

            modelBuilder.Entity("Mandegar.Models.Entities.Personeli.Nationality", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CreatedById")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int?>("ModifiedById")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.HasKey("Id");

                    b.HasIndex("CreatedById");

                    b.HasIndex("ModifiedById");

                    b.ToTable("Nationalities");
                });

            modelBuilder.Entity("Mandegar.Models.Entities.Personeli.Position", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CreatedById")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int?>("ModifiedById")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int?>("ParentId")
                        .HasColumnType("int");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.HasKey("Id");

                    b.HasIndex("CreatedById");

                    b.HasIndex("ModifiedById");

                    b.HasIndex("ParentId");

                    b.ToTable("Positions");
                });

            modelBuilder.Entity("Mandegar.Models.Entities.Personeli.Province", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CountryId")
                        .HasColumnType("int");

                    b.Property<int>("CreatedById")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int?>("ModifiedById")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.HasKey("Id");

                    b.HasIndex("CountryId");

                    b.HasIndex("CreatedById");

                    b.HasIndex("ModifiedById");

                    b.ToTable("Provinces");
                });

            modelBuilder.Entity("Mandegar.Models.Entities.Personeli.Relation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CreatedById")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int?>("ModifiedById")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.HasKey("Id");

                    b.HasIndex("CreatedById");

                    b.HasIndex("ModifiedById");

                    b.ToTable("Relations");
                });

            modelBuilder.Entity("Mandegar.Models.Entities.Personeli.Religion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CreatedById")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int?>("ModifiedById")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.HasKey("Id");

                    b.HasIndex("CreatedById");

                    b.HasIndex("ModifiedById");

                    b.ToTable("Religions");
                });

            modelBuilder.Entity("Mandegar.Models.Entities.Personeli.Resume", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AcademicYearId")
                        .HasColumnType("int");

                    b.Property<int?>("ActivityDuration")
                        .HasColumnType("int");

                    b.Property<int?>("ActivityFieldId")
                        .HasColumnType("int");

                    b.Property<int?>("CooperationTypeId")
                        .HasColumnType("int");

                    b.Property<int>("CreatedById")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int?>("ModifiedById")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<int?>("PositionId")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.Property<int>("StaffId")
                        .HasColumnType("int");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("WorkExperienceTypeId")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<string>("WorkPlaceName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("AcademicYearId");

                    b.HasIndex("ActivityFieldId");

                    b.HasIndex("CooperationTypeId");

                    b.HasIndex("CreatedById");

                    b.HasIndex("ModifiedById");

                    b.HasIndex("PositionId");

                    b.HasIndex("StaffId");

                    b.HasIndex("WorkExperienceTypeId");

                    b.ToTable("Resumes");
                });

            modelBuilder.Entity("Mandegar.Models.Entities.Personeli.Sacrifice", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("BattlefieldPresenceDuration")
                        .HasColumnType("int");

                    b.Property<int?>("CaptivityDuration")
                        .HasColumnType("int");

                    b.Property<int>("CreatedById")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsFreedMan")
                        .HasColumnType("bit");

                    b.Property<bool>("IsMartyrFamily")
                        .HasColumnType("bit");

                    b.Property<bool>("IsSacrificer")
                        .HasColumnType("bit");

                    b.Property<bool>("IsVeteran")
                        .HasColumnType("bit");

                    b.Property<int?>("ModifiedById")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<int>("RelationId")
                        .HasColumnType("int");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.Property<int>("StaffId")
                        .HasColumnType("int");

                    b.Property<int?>("VeteranPercentage")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CreatedById");

                    b.HasIndex("ModifiedById");

                    b.HasIndex("RelationId");

                    b.HasIndex("StaffId");

                    b.ToTable("Sacrifices");
                });

            modelBuilder.Entity("Mandegar.Models.Entities.Personeli.Staff", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("BirthCityId")
                        .HasColumnType("int");

                    b.Property<DateTime>("BirthDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("CreatedById")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Family")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("FatherName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<bool>("Gender")
                        .HasColumnType("bit");

                    b.Property<int?>("IdentityIssueCityId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("IdentityIssueDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("IdentityNumber")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("Image")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int?>("ModifiedById")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("NationalCode")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("PersonneliCode")
                        .HasMaxLength(32)
                        .HasColumnType("nvarchar(32)");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.HasKey("Id");

                    b.HasIndex("BirthCityId");

                    b.HasIndex("CreatedById");

                    b.HasIndex("IdentityIssueCityId");

                    b.HasIndex("ModifiedById");

                    b.ToTable("Staffs");
                });

            modelBuilder.Entity("Mandegar.Models.Entities.Personeli.StaffAddress", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int?>("AddressTypeId")
                        .HasColumnType("int");

                    b.Property<int>("CreatedById")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Mobile1")
                        .IsRequired()
                        .HasMaxLength(11)
                        .HasColumnType("nvarchar(11)");

                    b.Property<string>("Mobile2")
                        .HasMaxLength(11)
                        .HasColumnType("nvarchar(11)");

                    b.Property<int?>("ModifiedById")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("OtherWorkName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("OtherWorkPhone")
                        .HasMaxLength(11)
                        .HasColumnType("nvarchar(11)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasMaxLength(11)
                        .HasColumnType("nvarchar(11)");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.Property<int>("StaffId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AddressTypeId");

                    b.HasIndex("CreatedById");

                    b.HasIndex("ModifiedById");

                    b.HasIndex("StaffId");

                    b.ToTable("StaffAddresses");
                });

            modelBuilder.Entity("Mandegar.Models.Entities.Personeli.StaffComplementary", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("BloodTypeId")
                        .HasColumnType("int");

                    b.Property<string>("CertificateNumber")
                        .HasMaxLength(32)
                        .HasColumnType("nvarchar(32)");

                    b.Property<int>("CreatedById")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("IdentitySerialNumber")
                        .HasMaxLength(12)
                        .HasColumnType("nvarchar(12)");

                    b.Property<string>("InsuranceNumber")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<int?>("InsuranceTypeId")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int?>("MaritalStatusId")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<DateTime?>("MilitaryServiceDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("MilitaryServiceStatusId")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<int?>("ModifiedById")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<int?>("NationalityId")
                        .HasColumnType("int");

                    b.Property<int?>("ReligionId")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.Property<int>("StaffId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("BloodTypeId");

                    b.HasIndex("CreatedById");

                    b.HasIndex("InsuranceTypeId");

                    b.HasIndex("MaritalStatusId");

                    b.HasIndex("MilitaryServiceStatusId");

                    b.HasIndex("ModifiedById");

                    b.HasIndex("NationalityId");

                    b.HasIndex("ReligionId");

                    b.HasIndex("StaffId");

                    b.ToTable("StaffComplementaries");
                });

            modelBuilder.Entity("Mandegar.Models.Entities.Personeli.StaffDocument", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CreatedById")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("FileName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FileType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int?>("ModifiedById")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.Property<int>("StaffId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CreatedById");

                    b.HasIndex("ModifiedById");

                    b.HasIndex("StaffId");

                    b.ToTable("StaffDocuments");
                });

            modelBuilder.Entity("Mandegar.Models.Entities.Personeli.StaffFamilyInformation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("BirthDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("CreatedById")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<int>("EducationId")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Family")
                        .IsRequired()
                        .HasMaxLength(32)
                        .HasColumnType("nvarchar(32)");

                    b.Property<string>("IdentityNumber")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Job")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("MaritalStatusId")
                        .HasColumnType("int");

                    b.Property<string>("Mobile")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ModifiedById")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(32)
                        .HasColumnType("nvarchar(32)");

                    b.Property<string>("NationalCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .HasMaxLength(11)
                        .HasColumnType("nvarchar(11)");

                    b.Property<int>("RelationId")
                        .HasColumnType("int");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.Property<int>("StaffId")
                        .HasColumnType("int");

                    b.Property<string>("StudyField")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("WorkAddress")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("WorkPhone")
                        .HasMaxLength(11)
                        .HasColumnType("nvarchar(11)");

                    b.HasKey("Id");

                    b.HasIndex("CreatedById");

                    b.HasIndex("EducationId");

                    b.HasIndex("MaritalStatusId");

                    b.HasIndex("ModifiedById");

                    b.HasIndex("RelationId");

                    b.HasIndex("StaffId");

                    b.ToTable("StaffFamilyInformation");
                });

            modelBuilder.Entity("Mandegar.Models.Entities.Personeli.StaffFinancial", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AccountNumber")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int>("BankId")
                        .HasColumnType("int");

                    b.Property<string>("BranchName")
                        .HasMaxLength(32)
                        .HasColumnType("nvarchar(32)");

                    b.Property<int>("CreatedById")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int?>("ModifiedById")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.Property<string>("Sheba")
                        .HasMaxLength(26)
                        .HasColumnType("nvarchar(26)");

                    b.Property<int>("StaffId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("BankId");

                    b.HasIndex("CreatedById");

                    b.HasIndex("ModifiedById");

                    b.HasIndex("StaffId");

                    b.ToTable("StaffFinancials");
                });

            modelBuilder.Entity("Mandegar.Models.Entities.Personeli.TaskGroup", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CreatedById")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int?>("ModifiedById")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.HasKey("Id");

                    b.HasIndex("CreatedById");

                    b.HasIndex("ModifiedById");

                    b.ToTable("TaskGroups");
                });

            modelBuilder.Entity("Mandegar.Models.Entities.Personeli.Tasks", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CreatedById")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int?>("ModifiedById")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.Property<int>("TaskGroupId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CreatedById");

                    b.HasIndex("ModifiedById");

                    b.HasIndex("TaskGroupId");

                    b.ToTable("Tasks");
                });

            modelBuilder.Entity("Mandegar.Models.Entities.Personeli.WorkExperienceType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CreatedById")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int?>("ModifiedById")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.HasKey("Id");

                    b.HasIndex("CreatedById");

                    b.HasIndex("ModifiedById");

                    b.ToTable("WorkExperienceTypes");
                });

            modelBuilder.Entity("Mandegar.Models.Entities.User.Permission", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<int>("Index")
                        .HasColumnType("int");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ParentId")
                        .HasColumnType("int");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.Property<bool>("ShowInList")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("ParentId");

                    b.ToTable("Permissions");

                    b.HasData(
                        new
                        {
                            Id = -1,
                            CreatedOn = new DateTime(2022, 2, 25, 17, 26, 18, 614, DateTimeKind.Local).AddTicks(8764),
                            Index = 0,
                            IsActive = true,
                            IsDeleted = false,
                            Name = "کاربر عادی",
                            ShowInList = false
                        },
                        new
                        {
                            Id = 1,
                            CreatedOn = new DateTime(2022, 2, 25, 17, 26, 18, 615, DateTimeKind.Local).AddTicks(325),
                            Index = 0,
                            IsActive = true,
                            IsDeleted = false,
                            Name = "مدیر ارشد",
                            ShowInList = false
                        },
                        new
                        {
                            Id = 2,
                            CreatedOn = new DateTime(2022, 2, 25, 17, 26, 18, 615, DateTimeKind.Local).AddTicks(346),
                            Index = 0,
                            IsActive = true,
                            IsDeleted = false,
                            Name = "مدیر",
                            ShowInList = true
                        },
                        new
                        {
                            Id = 3,
                            CreatedOn = new DateTime(2022, 2, 25, 17, 26, 18, 615, DateTimeKind.Local).AddTicks(352),
                            Index = 0,
                            IsActive = true,
                            IsDeleted = false,
                            Name = "پنل مدیریت",
                            ShowInList = true
                        },
                        new
                        {
                            Id = 4,
                            CreatedOn = new DateTime(2022, 2, 25, 17, 26, 18, 615, DateTimeKind.Local).AddTicks(356),
                            Index = 1,
                            IsActive = true,
                            IsDeleted = false,
                            Name = "مدیریت کاربران",
                            ParentId = 3,
                            ShowInList = true
                        },
                        new
                        {
                            Id = 5,
                            CreatedOn = new DateTime(2022, 2, 25, 17, 26, 18, 615, DateTimeKind.Local).AddTicks(910),
                            Index = 1,
                            IsActive = true,
                            IsDeleted = false,
                            Name = "افزودن کاربر",
                            ParentId = 3,
                            ShowInList = true
                        },
                        new
                        {
                            Id = 6,
                            CreatedOn = new DateTime(2022, 2, 25, 17, 26, 18, 615, DateTimeKind.Local).AddTicks(927),
                            Index = 1,
                            IsActive = true,
                            IsDeleted = false,
                            Name = "ویرایش کاربر",
                            ParentId = 3,
                            ShowInList = true
                        },
                        new
                        {
                            Id = 7,
                            CreatedOn = new DateTime(2022, 2, 25, 17, 26, 18, 615, DateTimeKind.Local).AddTicks(932),
                            Index = 1,
                            IsActive = true,
                            IsDeleted = false,
                            Name = "حذف کاربر",
                            ParentId = 3,
                            ShowInList = true
                        },
                        new
                        {
                            Id = 27,
                            CreatedOn = new DateTime(2022, 2, 25, 17, 26, 18, 615, DateTimeKind.Local).AddTicks(935),
                            Index = 2,
                            IsActive = true,
                            IsDeleted = false,
                            Name = "مدیریت نقش‌ها",
                            ParentId = 3,
                            ShowInList = true
                        },
                        new
                        {
                            Id = 28,
                            CreatedOn = new DateTime(2022, 2, 25, 17, 26, 18, 615, DateTimeKind.Local).AddTicks(939),
                            Index = 2,
                            IsActive = true,
                            IsDeleted = false,
                            Name = "افزودن نقش",
                            ParentId = 3,
                            ShowInList = true
                        },
                        new
                        {
                            Id = 29,
                            CreatedOn = new DateTime(2022, 2, 25, 17, 26, 18, 615, DateTimeKind.Local).AddTicks(943),
                            Index = 2,
                            IsActive = true,
                            IsDeleted = false,
                            Name = "ویرایش نقش",
                            ParentId = 3,
                            ShowInList = true
                        },
                        new
                        {
                            Id = 30,
                            CreatedOn = new DateTime(2022, 2, 25, 17, 26, 18, 615, DateTimeKind.Local).AddTicks(947),
                            Index = 2,
                            IsActive = true,
                            IsDeleted = false,
                            Name = "حذف نقش",
                            ParentId = 3,
                            ShowInList = true
                        });
                });

            modelBuilder.Entity("Mandegar.Models.Entities.User.Profile", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Avatar")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<DateTime?>("BirthDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Family")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("Gender")
                        .HasColumnType("bit");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastLogin")
                        .HasColumnType("datetime2");

                    b.Property<string>("Mobile")
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.Property<string>("Name")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("NationalCode")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId")
                        .IsUnique();

                    b.ToTable("Profiles");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Avatar = "/Images/UserAvatar/Default.jpg",
                            CreatedOn = new DateTime(2022, 2, 25, 17, 26, 18, 612, DateTimeKind.Local).AddTicks(5633),
                            Email = "-",
                            Family = "سیستم",
                            Gender = true,
                            IsActive = true,
                            IsDeleted = false,
                            Name = "ادمین",
                            NationalCode = "",
                            UserId = 1
                        });
                });

            modelBuilder.Entity("Mandegar.Models.Entities.User.Role", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CreatedById")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int?>("ModifiedById")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.Property<bool>("ShowInList")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("CreatedById");

                    b.HasIndex("ModifiedById");

                    b.ToTable("Roles");

                    b.HasData(
                        new
                        {
                            Id = -1,
                            CreatedById = 1,
                            CreatedOn = new DateTime(2022, 2, 25, 17, 26, 18, 613, DateTimeKind.Local).AddTicks(7579),
                            IsActive = true,
                            IsDeleted = false,
                            Name = "کاربران عادی",
                            ShowInList = false
                        },
                        new
                        {
                            Id = 1,
                            CreatedById = 1,
                            CreatedOn = new DateTime(2022, 2, 25, 17, 26, 18, 613, DateTimeKind.Local).AddTicks(9320),
                            IsActive = true,
                            IsDeleted = false,
                            Name = "مدیر ارشد",
                            ShowInList = false
                        });
                });

            modelBuilder.Entity("Mandegar.Models.Entities.User.RolePermission", b =>
                {
                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.Property<int>("PermissionId")
                        .HasColumnType("int");

                    b.HasKey("RoleId", "PermissionId");

                    b.HasIndex("PermissionId");

                    b.ToTable("RolePermissions");

                    b.HasData(
                        new
                        {
                            RoleId = 1,
                            PermissionId = 1
                        },
                        new
                        {
                            RoleId = -1,
                            PermissionId = -1
                        });
                });

            modelBuilder.Entity("Mandegar.Models.Entities.User.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int?>("ModifiedById")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RequestCode")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("ModifiedById");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedOn = new DateTime(2022, 2, 25, 17, 26, 18, 605, DateTimeKind.Local).AddTicks(3155),
                            IsActive = true,
                            IsDeleted = false,
                            Password = "aUMRrPiiPVPyDld0loRhog==",
                            RequestCode = "XRdIRymC9ZaY/uuEFuahFMWA0SO4ELh7PnWGRM8rPDTDRXIkeuQ78E0qpmern6kM",
                            Username = "mandegar"
                        });
                });

            modelBuilder.Entity("Mandegar.Models.Entities.User.UserRole", b =>
                {
                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("RoleId", "UserId");

                    b.HasIndex("UserId");

                    b.ToTable("UserRoles");

                    b.HasData(
                        new
                        {
                            RoleId = 1,
                            UserId = 1
                        });
                });

            modelBuilder.Entity("Mandegar.Models.Entities.BaseInfo.AcademicYear", b =>
                {
                    b.HasOne("Mandegar.Models.Entities.User.User", "CreatedBy")
                        .WithMany("AcademicYearCreatedBy")
                        .HasForeignKey("CreatedById")
                        .HasConstraintName("FK_AcademicYear_Users_CreatedBy")
                        .IsRequired();

                    b.HasOne("Mandegar.Models.Entities.User.User", "ModifiedBy")
                        .WithMany("AcademicYearModifiedBy")
                        .HasForeignKey("ModifiedById")
                        .HasConstraintName("FK_AcademicYear_Users_ModifiedBy");

                    b.Navigation("CreatedBy");

                    b.Navigation("ModifiedBy");
                });

            modelBuilder.Entity("Mandegar.Models.Entities.BaseInfo.Class", b =>
                {
                    b.HasOne("Mandegar.Models.Entities.User.User", "CreatedBy")
                        .WithMany("ClassCreatedBy")
                        .HasForeignKey("CreatedById")
                        .HasConstraintName("FK_Class_Users_CreatedBy")
                        .IsRequired();

                    b.HasOne("Mandegar.Models.Entities.User.User", "ModifiedBy")
                        .WithMany("ClassModifiedBy")
                        .HasForeignKey("ModifiedById")
                        .HasConstraintName("FK_Class_Users_ModifiedBy");

                    b.HasOne("Mandegar.Models.Entities.BaseInfo.StudyGrade", "StudyGrade")
                        .WithMany()
                        .HasForeignKey("StudyGradeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CreatedBy");

                    b.Navigation("ModifiedBy");

                    b.Navigation("StudyGrade");
                });

            modelBuilder.Entity("Mandegar.Models.Entities.BaseInfo.Document", b =>
                {
                    b.HasOne("Mandegar.Models.Entities.User.User", "CreatedBy")
                        .WithMany("DocumentCreatedBy")
                        .HasForeignKey("CreatedById")
                        .HasConstraintName("FK_Document_Users_CreatedBy")
                        .IsRequired();

                    b.HasOne("Mandegar.Models.Entities.User.User", "ModifiedBy")
                        .WithMany("DocumentModifiedBy")
                        .HasForeignKey("ModifiedById")
                        .HasConstraintName("FK_Document_Users_ModifiedBy");

                    b.Navigation("CreatedBy");

                    b.Navigation("ModifiedBy");
                });

            modelBuilder.Entity("Mandegar.Models.Entities.BaseInfo.Event", b =>
                {
                    b.HasOne("Mandegar.Models.Entities.User.User", "CreatedBy")
                        .WithMany("EventCreatedBy")
                        .HasForeignKey("CreatedById")
                        .HasConstraintName("FK_Event_Users_CreatedBy")
                        .IsRequired();

                    b.HasOne("Mandegar.Models.Entities.BaseInfo.EventType", "EventType")
                        .WithMany()
                        .HasForeignKey("EventTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Mandegar.Models.Entities.BaseInfo.ExecutiveCalendar", "ExecutiveCalendar")
                        .WithMany()
                        .HasForeignKey("ExecutiveCalendarId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Mandegar.Models.Entities.User.User", "ModifiedBy")
                        .WithMany("EventModifiedBy")
                        .HasForeignKey("ModifiedById")
                        .HasConstraintName("FK_Event_Users_ModifiedBy");

                    b.Navigation("CreatedBy");

                    b.Navigation("EventType");

                    b.Navigation("ExecutiveCalendar");

                    b.Navigation("ModifiedBy");
                });

            modelBuilder.Entity("Mandegar.Models.Entities.BaseInfo.EventType", b =>
                {
                    b.HasOne("Mandegar.Models.Entities.User.User", "CreatedBy")
                        .WithMany("EventTypeCreatedBy")
                        .HasForeignKey("CreatedById")
                        .HasConstraintName("FK_EventType_Users_CreatedBy")
                        .IsRequired();

                    b.HasOne("Mandegar.Models.Entities.User.User", "ModifiedBy")
                        .WithMany("EventTypeModifiedBy")
                        .HasForeignKey("ModifiedById")
                        .HasConstraintName("FK_EventType_Users_ModifiedBy");

                    b.Navigation("CreatedBy");

                    b.Navigation("ModifiedBy");
                });

            modelBuilder.Entity("Mandegar.Models.Entities.BaseInfo.ExecutiveCalendar", b =>
                {
                    b.HasOne("Mandegar.Models.Entities.BaseInfo.AcademicYear", "AcademicYear")
                        .WithMany()
                        .HasForeignKey("AcademicYearId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Mandegar.Models.Entities.User.User", "CreatedBy")
                        .WithMany("ExecutiveCalendarCreatedBy")
                        .HasForeignKey("CreatedById")
                        .HasConstraintName("FK_ExecutiveCalendar_Users_CreatedBy")
                        .IsRequired();

                    b.HasOne("Mandegar.Models.Entities.User.User", "ModifiedBy")
                        .WithMany("ExecutiveCalendarModifiedBy")
                        .HasForeignKey("ModifiedById")
                        .HasConstraintName("FK_ExecutiveCalendar_Users_ModifiedBy");

                    b.Navigation("AcademicYear");

                    b.Navigation("CreatedBy");

                    b.Navigation("ModifiedBy");
                });

            modelBuilder.Entity("Mandegar.Models.Entities.BaseInfo.Lesson", b =>
                {
                    b.HasOne("Mandegar.Models.Entities.User.User", "CreatedBy")
                        .WithMany("LessonCreatedBy")
                        .HasForeignKey("CreatedById")
                        .HasConstraintName("FK_Lesson_Users_CreatedBy")
                        .IsRequired();

                    b.HasOne("Mandegar.Models.Entities.BaseInfo.LessonType", "LessonType")
                        .WithMany()
                        .HasForeignKey("LessonTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Mandegar.Models.Entities.User.User", "ModifiedBy")
                        .WithMany("LessonModifiedBy")
                        .HasForeignKey("ModifiedById")
                        .HasConstraintName("FK_Lesson_Users_ModifiedBy");

                    b.HasOne("Mandegar.Models.Entities.BaseInfo.StudyGrade", "StudyGrade")
                        .WithMany()
                        .HasForeignKey("StudyGradeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CreatedBy");

                    b.Navigation("LessonType");

                    b.Navigation("ModifiedBy");

                    b.Navigation("StudyGrade");
                });

            modelBuilder.Entity("Mandegar.Models.Entities.BaseInfo.LessonType", b =>
                {
                    b.HasOne("Mandegar.Models.Entities.User.User", "CreatedBy")
                        .WithMany("LessonTypeCreatedBy")
                        .HasForeignKey("CreatedById")
                        .HasConstraintName("FK_LessonType_Users_CreatedBy")
                        .IsRequired();

                    b.HasOne("Mandegar.Models.Entities.User.User", "ModifiedBy")
                        .WithMany("LessonTypeModifiedBy")
                        .HasForeignKey("ModifiedById")
                        .HasConstraintName("FK_LessonType_Users_ModifiedBy");

                    b.Navigation("CreatedBy");

                    b.Navigation("ModifiedBy");
                });

            modelBuilder.Entity("Mandegar.Models.Entities.BaseInfo.StudyDegree", b =>
                {
                    b.HasOne("Mandegar.Models.Entities.User.User", "CreatedBy")
                        .WithMany("StudyDegreeCreatedBy")
                        .HasForeignKey("CreatedById")
                        .HasConstraintName("FK_StudyDegree_Users_CreatedBy")
                        .IsRequired();

                    b.HasOne("Mandegar.Models.Entities.User.User", "ModifiedBy")
                        .WithMany("StudyDegreeModifiedBy")
                        .HasForeignKey("ModifiedById")
                        .HasConstraintName("FK_StudyDegree_Users_ModifiedBy");

                    b.Navigation("CreatedBy");

                    b.Navigation("ModifiedBy");
                });

            modelBuilder.Entity("Mandegar.Models.Entities.BaseInfo.StudyField", b =>
                {
                    b.HasOne("Mandegar.Models.Entities.User.User", "CreatedBy")
                        .WithMany("StudyFieldCreatedBy")
                        .HasForeignKey("CreatedById")
                        .HasConstraintName("FK_StudyField_Users_CreatedBy")
                        .IsRequired();

                    b.HasOne("Mandegar.Models.Entities.User.User", "ModifiedBy")
                        .WithMany("StudyFieldModifiedBy")
                        .HasForeignKey("ModifiedById")
                        .HasConstraintName("FK_StudyField_Users_ModifiedBy");

                    b.HasOne("Mandegar.Models.Entities.BaseInfo.StudyDegree", "StudyDegree")
                        .WithMany()
                        .HasForeignKey("StudyDefreeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CreatedBy");

                    b.Navigation("ModifiedBy");

                    b.Navigation("StudyDegree");
                });

            modelBuilder.Entity("Mandegar.Models.Entities.BaseInfo.StudyGrade", b =>
                {
                    b.HasOne("Mandegar.Models.Entities.User.User", "CreatedBy")
                        .WithMany("StudyGradeCreatedBy")
                        .HasForeignKey("CreatedById")
                        .HasConstraintName("FK_StudyGrade_Users_CreatedBy")
                        .IsRequired();

                    b.HasOne("Mandegar.Models.Entities.User.User", "ModifiedBy")
                        .WithMany("StudyGradeModifiedBy")
                        .HasForeignKey("ModifiedById")
                        .HasConstraintName("FK_StudyGrade_Users_ModifiedBy");

                    b.HasOne("Mandegar.Models.Entities.BaseInfo.StudyField", "StudyField")
                        .WithMany()
                        .HasForeignKey("StudyFieldId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CreatedBy");

                    b.Navigation("ModifiedBy");

                    b.Navigation("StudyField");
                });

            modelBuilder.Entity("Mandegar.Models.Entities.BaseInfo.Topic", b =>
                {
                    b.HasOne("Mandegar.Models.Entities.User.User", "CreatedBy")
                        .WithMany("TopicCreatedBy")
                        .HasForeignKey("CreatedById")
                        .HasConstraintName("FK_Topic_Users_CreatedBy")
                        .IsRequired();

                    b.HasOne("Mandegar.Models.Entities.BaseInfo.Lesson", "Lesson")
                        .WithMany()
                        .HasForeignKey("LessonId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Mandegar.Models.Entities.User.User", "ModifiedBy")
                        .WithMany("TopicModifiedBy")
                        .HasForeignKey("ModifiedById")
                        .HasConstraintName("FK_Topic_Users_ModifiedBy");

                    b.Navigation("CreatedBy");

                    b.Navigation("Lesson");

                    b.Navigation("ModifiedBy");
                });

            modelBuilder.Entity("Mandegar.Models.Entities.BaseInfo.YearClass", b =>
                {
                    b.HasOne("Mandegar.Models.Entities.BaseInfo.AcademicYear", "AcademicYear")
                        .WithMany()
                        .HasForeignKey("AcademicYeardId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Mandegar.Models.Entities.BaseInfo.Class", "Class")
                        .WithMany()
                        .HasForeignKey("ClassId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Mandegar.Models.Entities.User.User", "CreatedBy")
                        .WithMany("YearClassCreatedBy")
                        .HasForeignKey("CreatedById")
                        .HasConstraintName("FK_YearClass_Users_CreatedBy")
                        .IsRequired();

                    b.HasOne("Mandegar.Models.Entities.User.User", "ModifiedBy")
                        .WithMany("YearClassModifiedBy")
                        .HasForeignKey("ModifiedById")
                        .HasConstraintName("FK_YearClass_Users_ModifiedBy");

                    b.Navigation("AcademicYear");

                    b.Navigation("Class");

                    b.Navigation("CreatedBy");

                    b.Navigation("ModifiedBy");
                });

            modelBuilder.Entity("Mandegar.Models.Entities.Departments.Department", b =>
                {
                    b.HasOne("Mandegar.Models.Entities.User.User", "CreatedBy")
                        .WithMany("DepartmentCreatedBy")
                        .HasForeignKey("CreatedById")
                        .HasConstraintName("FK_Department_Users_CreatedBy")
                        .IsRequired();

                    b.HasOne("Mandegar.Models.Entities.User.User", "ModifiedBy")
                        .WithMany("DepartmentModifiedBy")
                        .HasForeignKey("ModifiedById")
                        .HasConstraintName("FK_Department_Users_ModifiedBy");

                    b.HasOne("Mandegar.Models.Entities.Departments.Department", "Parent")
                        .WithMany("Departments")
                        .HasForeignKey("ParentId");

                    b.Navigation("CreatedBy");

                    b.Navigation("ModifiedBy");

                    b.Navigation("Parent");
                });

            modelBuilder.Entity("Mandegar.Models.Entities.Departments.DepartmentActivity", b =>
                {
                    b.HasOne("Mandegar.Models.Entities.User.User", "CreatedBy")
                        .WithMany("DepartmentActivityCreatedBy")
                        .HasForeignKey("CreatedById")
                        .HasConstraintName("FK_DepartmentActivity_Users_CreatedBy")
                        .IsRequired();

                    b.HasOne("Mandegar.Models.Entities.Departments.Department", "Department")
                        .WithMany()
                        .HasForeignKey("DepartmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Mandegar.Models.Entities.User.User", "ModifiedBy")
                        .WithMany("DepartmentActivityModifiedBy")
                        .HasForeignKey("ModifiedById")
                        .HasConstraintName("FK_DepartmentActivity_Users_ModifiedBy");

                    b.Navigation("CreatedBy");

                    b.Navigation("Department");

                    b.Navigation("ModifiedBy");
                });

            modelBuilder.Entity("Mandegar.Models.Entities.Departments.DepartmentActivityMember", b =>
                {
                    b.HasOne("Mandegar.Models.Entities.Departments.DepartmentActivity", "DepartmentActivity")
                        .WithMany("DepartmentActivityMembers")
                        .HasForeignKey("DepartmentActivityId")
                        .IsRequired();

                    b.HasOne("Mandegar.Models.Entities.Departments.DepartmentMember", "DepartmentMember")
                        .WithMany("DepartmentActivityMembers")
                        .HasForeignKey("DepartmentMemberId")
                        .IsRequired();

                    b.Navigation("DepartmentActivity");

                    b.Navigation("DepartmentMember");
                });

            modelBuilder.Entity("Mandegar.Models.Entities.Departments.DepartmentActivityType", b =>
                {
                    b.HasOne("Mandegar.Models.Entities.User.User", "CreatedBy")
                        .WithMany("DepartmentActivityTypeCreatedBy")
                        .HasForeignKey("CreatedById")
                        .HasConstraintName("FK_DepartmentActivityType_Users_CreatedBy")
                        .IsRequired();

                    b.HasOne("Mandegar.Models.Entities.User.User", "ModifiedBy")
                        .WithMany("DepartmentActivityTypeModifiedBy")
                        .HasForeignKey("ModifiedById")
                        .HasConstraintName("FK_DepartmentActivityType_Users_ModifiedBy");

                    b.Navigation("CreatedBy");

                    b.Navigation("ModifiedBy");
                });

            modelBuilder.Entity("Mandegar.Models.Entities.Departments.DepartmentEvaluationGroup", b =>
                {
                    b.HasOne("Mandegar.Models.Entities.User.User", "CreatedBy")
                        .WithMany("DepartmentEvaluationGroupCreatedBy")
                        .HasForeignKey("CreatedById")
                        .HasConstraintName("FK_DepartmentEvaluationGroup_Users_CreatedBy")
                        .IsRequired();

                    b.HasOne("Mandegar.Models.Entities.User.User", "ModifiedBy")
                        .WithMany("DepartmentEvaluationGroupModifiedBy")
                        .HasForeignKey("ModifiedById")
                        .HasConstraintName("FK_DepartmentEvaluationGroup_Users_ModifiedBy");

                    b.Navigation("CreatedBy");

                    b.Navigation("ModifiedBy");
                });

            modelBuilder.Entity("Mandegar.Models.Entities.Departments.DepartmentLesson", b =>
                {
                    b.HasOne("Mandegar.Models.Entities.Departments.Department", "Department")
                        .WithMany()
                        .HasForeignKey("DepartmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Mandegar.Models.Entities.BaseInfo.Lesson", "Lesson")
                        .WithMany()
                        .HasForeignKey("LessonId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Department");

                    b.Navigation("Lesson");
                });

            modelBuilder.Entity("Mandegar.Models.Entities.Departments.DepartmentMeeting", b =>
                {
                    b.HasOne("Mandegar.Models.Entities.User.User", "CreatedBy")
                        .WithMany("DepartmentMeetingCreatedBy")
                        .HasForeignKey("CreatedById")
                        .HasConstraintName("FK_DepartmentMeeting_Users_CreatedBy")
                        .IsRequired();

                    b.HasOne("Mandegar.Models.Entities.Departments.DepartmentSchedule", "DepartmentSchedule")
                        .WithMany()
                        .HasForeignKey("DepartmentScheduleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Mandegar.Models.Entities.User.User", "ModifiedBy")
                        .WithMany("DepartmentMeetingModifiedBy")
                        .HasForeignKey("ModifiedById")
                        .HasConstraintName("FK_DepartmentMeeting_Users_ModifiedBy");

                    b.Navigation("CreatedBy");

                    b.Navigation("DepartmentSchedule");

                    b.Navigation("ModifiedBy");
                });

            modelBuilder.Entity("Mandegar.Models.Entities.Departments.DepartmentMeetingAttendees", b =>
                {
                    b.HasOne("Mandegar.Models.Entities.User.User", "CreatedBy")
                        .WithMany("DepartmentMeetingAttendeesCreatedBy")
                        .HasForeignKey("CreatedById")
                        .HasConstraintName("FK_DepartmentMeetingAttendees_Users_CreatedBy")
                        .IsRequired();

                    b.HasOne("Mandegar.Models.Entities.Departments.DepartmentMeeting", "DepartmentMeeting")
                        .WithMany()
                        .HasForeignKey("DepartmentMeetingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Mandegar.Models.Entities.Departments.DepartmentMember", "DepartmentMember")
                        .WithMany()
                        .HasForeignKey("DepartmentMemberId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Mandegar.Models.Entities.User.User", "ModifiedBy")
                        .WithMany("DepartmentMeetingAttendeesModifiedBy")
                        .HasForeignKey("ModifiedById")
                        .HasConstraintName("FK_DepartmentMeetingAttendees_Users_ModifiedBy");

                    b.Navigation("CreatedBy");

                    b.Navigation("DepartmentMeeting");

                    b.Navigation("DepartmentMember");

                    b.Navigation("ModifiedBy");
                });

            modelBuilder.Entity("Mandegar.Models.Entities.Departments.DepartmentMeetingMember", b =>
                {
                    b.HasOne("Mandegar.Models.Entities.User.User", "CreatedBy")
                        .WithMany("DepartmentMeetingMemberCreatedBy")
                        .HasForeignKey("CreatedById")
                        .HasConstraintName("FK_DepartmentMeetingMember_Users_CreatedBy")
                        .IsRequired();

                    b.HasOne("Mandegar.Models.Entities.Departments.Department", "Department")
                        .WithMany("DepartmentMeetingMembers")
                        .HasForeignKey("DepartmentId")
                        .IsRequired();

                    b.HasOne("Mandegar.Models.Entities.Departments.DepartmentMeeting", "DepartmentMeeting")
                        .WithMany("DepartmentMeetingMembers")
                        .HasForeignKey("DepartmentMeetingId")
                        .IsRequired();

                    b.HasOne("Mandegar.Models.Entities.Departments.DepartmentMember", null)
                        .WithMany("DepartmentMeetingMembers")
                        .HasForeignKey("DepartmentMemberId");

                    b.HasOne("Mandegar.Models.Entities.User.User", "ModifiedBy")
                        .WithMany("DepartmentMeetingMemberModifiedBy")
                        .HasForeignKey("ModifiedById")
                        .HasConstraintName("FK_DepartmentMeetingMember_Users_ModifiedBy");

                    b.Navigation("CreatedBy");

                    b.Navigation("Department");

                    b.Navigation("DepartmentMeeting");

                    b.Navigation("ModifiedBy");
                });

            modelBuilder.Entity("Mandegar.Models.Entities.Departments.DepartmentMember", b =>
                {
                    b.HasOne("Mandegar.Models.Entities.User.User", "CreatedBy")
                        .WithMany("DepartmentMemberCreatedBy")
                        .HasForeignKey("CreatedById")
                        .HasConstraintName("FK_DepartmentMember_Users_CreatedBy")
                        .IsRequired();

                    b.HasOne("Mandegar.Models.Entities.Departments.Department", "Department")
                        .WithMany()
                        .HasForeignKey("DepartmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Mandegar.Models.Entities.User.User", "ModifiedBy")
                        .WithMany("DepartmentMemberModifiedBy")
                        .HasForeignKey("ModifiedById")
                        .HasConstraintName("FK_DepartmentMember_Users_ModifiedBy");

                    b.HasOne("Mandegar.Models.Entities.Personeli.Position", "Position")
                        .WithMany()
                        .HasForeignKey("PositionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Mandegar.Models.Entities.Personeli.Staff", "Staff")
                        .WithMany()
                        .HasForeignKey("StaffId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CreatedBy");

                    b.Navigation("Department");

                    b.Navigation("ModifiedBy");

                    b.Navigation("Position");

                    b.Navigation("Staff");
                });

            modelBuilder.Entity("Mandegar.Models.Entities.Departments.DepartmentSchedule", b =>
                {
                    b.HasOne("Mandegar.Models.Entities.User.User", "CreatedBy")
                        .WithMany("DepartmentScheduleCreatedBy")
                        .HasForeignKey("CreatedById")
                        .HasConstraintName("FK_DepartmentSchedule_Users_CreatedBy")
                        .IsRequired();

                    b.HasOne("Mandegar.Models.Entities.BaseInfo.ExecutiveCalendar", "ExecutiveCalendar")
                        .WithMany()
                        .HasForeignKey("ExecutiveCalendarId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Mandegar.Models.Entities.User.User", "ModifiedBy")
                        .WithMany("DepartmentScheduleModifiedBy")
                        .HasForeignKey("ModifiedById")
                        .HasConstraintName("FK_DepartmentSchedule_Users_ModifiedBy");

                    b.Navigation("CreatedBy");

                    b.Navigation("ExecutiveCalendar");

                    b.Navigation("ModifiedBy");
                });

            modelBuilder.Entity("Mandegar.Models.Entities.Departments.EvaluationCourse", b =>
                {
                    b.HasOne("Mandegar.Models.Entities.User.User", "CreatedBy")
                        .WithMany("EvaluationCourseCreatedBy")
                        .HasForeignKey("CreatedById")
                        .HasConstraintName("FK_EvaluationCourse_Users_CreatedBy")
                        .IsRequired();

                    b.HasOne("Mandegar.Models.Entities.User.User", "ModifiedBy")
                        .WithMany("EvaluationCourseModifiedBy")
                        .HasForeignKey("ModifiedById")
                        .HasConstraintName("FK_EvaluationCourse_Users_ModifiedBy");

                    b.Navigation("CreatedBy");

                    b.Navigation("ModifiedBy");
                });

            modelBuilder.Entity("Mandegar.Models.Entities.Departments.EvaluationIndicator", b =>
                {
                    b.HasOne("Mandegar.Models.Entities.User.User", "CreatedBy")
                        .WithMany("EvaluationIndicatorsCreatedBy")
                        .HasForeignKey("CreatedById")
                        .HasConstraintName("FK_EvaluationIndicators_Users_CreatedBy")
                        .IsRequired();

                    b.HasOne("Mandegar.Models.Entities.Departments.DepartmentEvaluationGroup", "DepartmentEvaluationGroup")
                        .WithMany()
                        .HasForeignKey("DepartmentEvaluationGroupId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Mandegar.Models.Entities.Departments.DepartmentLesson", "DepartmentLesson")
                        .WithMany()
                        .HasForeignKey("DepartmentLessonId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Mandegar.Models.Entities.User.User", "ModifiedBy")
                        .WithMany("EvaluationIndicatorsModifiedBy")
                        .HasForeignKey("ModifiedById")
                        .HasConstraintName("FK_EvaluationIndicators_Users_ModifiedBy");

                    b.Navigation("CreatedBy");

                    b.Navigation("DepartmentEvaluationGroup");

                    b.Navigation("DepartmentLesson");

                    b.Navigation("ModifiedBy");
                });

            modelBuilder.Entity("Mandegar.Models.Entities.Departments.MeetingMember", b =>
                {
                    b.HasOne("Mandegar.Models.Entities.User.User", "CreatedBy")
                        .WithMany("MeetingMemberCreatedBy")
                        .HasForeignKey("CreatedById")
                        .HasConstraintName("FK_MeetingMember_Users_CreatedBy")
                        .IsRequired();

                    b.HasOne("Mandegar.Models.Entities.Departments.DepartmentMeetingMember", "DepartmentMeetingMember")
                        .WithMany("MeetingMembers")
                        .HasForeignKey("DepartmentMeetingMemberId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Mandegar.Models.Entities.Departments.DepartmentMember", "DepartmentMember")
                        .WithMany("MeetingMembers")
                        .HasForeignKey("DepartmentMemberId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Mandegar.Models.Entities.User.User", "ModifiedBy")
                        .WithMany("MeetingMemberModifiedBy")
                        .HasForeignKey("ModifiedById")
                        .HasConstraintName("FK_MeetingMember_Users_ModifiedBy");

                    b.Navigation("CreatedBy");

                    b.Navigation("DepartmentMeetingMember");

                    b.Navigation("DepartmentMember");

                    b.Navigation("ModifiedBy");
                });

            modelBuilder.Entity("Mandegar.Models.Entities.Departments.ProceedingsDepartment", b =>
                {
                    b.HasOne("Mandegar.Models.Entities.User.User", "CreatedBy")
                        .WithMany("ProceedingsDepartmentCreatedBy")
                        .HasForeignKey("CreatedById")
                        .HasConstraintName("FK_ProceedingsDepartment_Users_CreatedBy")
                        .IsRequired();

                    b.HasOne("Mandegar.Models.Entities.Departments.DepartmentMeeting", "DepartmentMeeting")
                        .WithMany()
                        .HasForeignKey("DepartmentMeetingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Mandegar.Models.Entities.User.User", "ModifiedBy")
                        .WithMany("ProceedingsDepartmentModifiedBy")
                        .HasForeignKey("ModifiedById")
                        .HasConstraintName("FK_ProceedingsDepartment_Users_ModifiedBy");

                    b.Navigation("CreatedBy");

                    b.Navigation("DepartmentMeeting");

                    b.Navigation("ModifiedBy");
                });

            modelBuilder.Entity("Mandegar.Models.Entities.Departments.SecretaryEvaluation", b =>
                {
                    b.HasOne("Mandegar.Models.Entities.Departments.DepartmentEvaluationGroup", "DepartmentEvaluationGroup")
                        .WithMany()
                        .HasForeignKey("DepartmentEvaluationGroupId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Mandegar.Models.Entities.Departments.DepartmentMember", "DepartmentMember")
                        .WithMany()
                        .HasForeignKey("DepartmentMemberId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Mandegar.Models.Entities.Departments.EvaluationCourse", "EvaluationCourse")
                        .WithMany()
                        .HasForeignKey("EvaluationCourseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("DepartmentEvaluationGroup");

                    b.Navigation("DepartmentMember");

                    b.Navigation("EvaluationCourse");
                });

            modelBuilder.Entity("Mandegar.Models.Entities.Departments.SecretaryScore", b =>
                {
                    b.HasOne("Mandegar.Models.Entities.User.User", "CreatedBy")
                        .WithMany("SecretaryScoreCreatedBy")
                        .HasForeignKey("CreatedById")
                        .HasConstraintName("FK_SecretaryScore_Users_CreatedBy")
                        .IsRequired();

                    b.HasOne("Mandegar.Models.Entities.Departments.EvaluationCourse", "EvaluationCourse")
                        .WithMany()
                        .HasForeignKey("EvaluationCourseId");

                    b.HasOne("Mandegar.Models.Entities.Departments.EvaluationIndicator", "EvaluationIndicator")
                        .WithMany()
                        .HasForeignKey("EvaluationIndicatorsId");

                    b.HasOne("Mandegar.Models.Entities.User.User", "ModifiedBy")
                        .WithMany("SecretaryScoreModifiedBy")
                        .HasForeignKey("ModifiedById")
                        .HasConstraintName("FK_SecretaryScore_Users_ModifiedBy");

                    b.HasOne("Mandegar.Models.Entities.Departments.SecretaryEvaluation", "SecretaryEvaluation")
                        .WithMany()
                        .HasForeignKey("SecretaryEvaluationId");

                    b.Navigation("CreatedBy");

                    b.Navigation("EvaluationCourse");

                    b.Navigation("EvaluationIndicator");

                    b.Navigation("ModifiedBy");

                    b.Navigation("SecretaryEvaluation");
                });

            modelBuilder.Entity("Mandegar.Models.Entities.Departments.SessionApprovals", b =>
                {
                    b.HasOne("Mandegar.Models.Entities.User.User", "CreatedBy")
                        .WithMany("SessionApprovalsCreatedBy")
                        .HasForeignKey("CreatedById")
                        .HasConstraintName("FK_SessionApprovals_Users_CreatedBy")
                        .IsRequired();

                    b.HasOne("Mandegar.Models.Entities.Departments.DepartmentMeeting", "DepartmentMeeting")
                        .WithMany()
                        .HasForeignKey("DepartmentMeetingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Mandegar.Models.Entities.Departments.DepartmentMeetingMember", "DepartmentMeetingMember")
                        .WithMany()
                        .HasForeignKey("DepartmentMeetingMemberId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Mandegar.Models.Entities.User.User", "ModifiedBy")
                        .WithMany("SessionApprovalsModifiedBy")
                        .HasForeignKey("ModifiedById")
                        .HasConstraintName("FK_SessionApprovals_Users_ModifiedBy");

                    b.Navigation("CreatedBy");

                    b.Navigation("DepartmentMeeting");

                    b.Navigation("DepartmentMeetingMember");

                    b.Navigation("ModifiedBy");
                });

            modelBuilder.Entity("Mandegar.Models.Entities.Personeli.Activity", b =>
                {
                    b.HasOne("Mandegar.Models.Entities.Personeli.ActivityCase", "ActivityCase")
                        .WithMany()
                        .HasForeignKey("ActivityCaseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Mandegar.Models.Entities.Personeli.ActivityType", "ActivityType")
                        .WithMany()
                        .HasForeignKey("ActivityTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Mandegar.Models.Entities.User.User", "CreatedBy")
                        .WithMany("ActivityCreatedBy")
                        .HasForeignKey("CreatedById")
                        .HasConstraintName("FK_Activity_Users_CreatedBy")
                        .IsRequired();

                    b.HasOne("Mandegar.Models.Entities.User.User", "ModifiedBy")
                        .WithMany("ActivityModifiedBy")
                        .HasForeignKey("ModifiedById")
                        .HasConstraintName("FK_Activity_Users_ModifiedBy");

                    b.HasOne("Mandegar.Models.Entities.Personeli.Staff", "Staff")
                        .WithMany()
                        .HasForeignKey("StaffId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ActivityCase");

                    b.Navigation("ActivityType");

                    b.Navigation("CreatedBy");

                    b.Navigation("ModifiedBy");

                    b.Navigation("Staff");
                });

            modelBuilder.Entity("Mandegar.Models.Entities.Personeli.ActivityCase", b =>
                {
                    b.HasOne("Mandegar.Models.Entities.User.User", "CreatedBy")
                        .WithMany("ActivityCaseCreatedBy")
                        .HasForeignKey("CreatedById")
                        .HasConstraintName("FK_ActivityCase_Users_CreatedBy")
                        .IsRequired();

                    b.HasOne("Mandegar.Models.Entities.User.User", "ModifiedBy")
                        .WithMany("ActivityCaseModifiedBy")
                        .HasForeignKey("ModifiedById")
                        .HasConstraintName("FK_ActivityCase_Users_ModifiedBy");

                    b.Navigation("CreatedBy");

                    b.Navigation("ModifiedBy");
                });

            modelBuilder.Entity("Mandegar.Models.Entities.Personeli.ActivityField", b =>
                {
                    b.HasOne("Mandegar.Models.Entities.User.User", "CreatedBy")
                        .WithMany("ActivityFieldCreatedBy")
                        .HasForeignKey("CreatedById")
                        .HasConstraintName("FK_ActivityField_Users_CreatedBy")
                        .IsRequired();

                    b.HasOne("Mandegar.Models.Entities.User.User", "ModifiedBy")
                        .WithMany("ActivityFieldModifiedBy")
                        .HasForeignKey("ModifiedById")
                        .HasConstraintName("FK_ActivityField_Users_ModifiedBy");

                    b.Navigation("CreatedBy");

                    b.Navigation("ModifiedBy");
                });

            modelBuilder.Entity("Mandegar.Models.Entities.Personeli.ActivityType", b =>
                {
                    b.HasOne("Mandegar.Models.Entities.User.User", "CreatedBy")
                        .WithMany("ActivityTypeCreatedBy")
                        .HasForeignKey("CreatedById")
                        .HasConstraintName("FK_ActivityType_Users_CreatedBy")
                        .IsRequired();

                    b.HasOne("Mandegar.Models.Entities.User.User", "ModifiedBy")
                        .WithMany("ActivityTypeModifiedBy")
                        .HasForeignKey("ModifiedById")
                        .HasConstraintName("FK_ActivityType_Users_ModifiedBy");

                    b.Navigation("CreatedBy");

                    b.Navigation("ModifiedBy");
                });

            modelBuilder.Entity("Mandegar.Models.Entities.Personeli.AddressType", b =>
                {
                    b.HasOne("Mandegar.Models.Entities.User.User", "CreatedBy")
                        .WithMany("AddressTypeCreatedBy")
                        .HasForeignKey("CreatedById")
                        .HasConstraintName("FK_AddressType_Users_CreatedBy")
                        .IsRequired();

                    b.HasOne("Mandegar.Models.Entities.User.User", "ModifiedBy")
                        .WithMany("AddressTypeModifiedBy")
                        .HasForeignKey("ModifiedById")
                        .HasConstraintName("FK_AddressType_Users_ModifiedBy");

                    b.Navigation("CreatedBy");

                    b.Navigation("ModifiedBy");
                });

            modelBuilder.Entity("Mandegar.Models.Entities.Personeli.AssignPosition", b =>
                {
                    b.HasOne("Mandegar.Models.Entities.Personeli.Position", "Position")
                        .WithMany()
                        .HasForeignKey("PositionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Mandegar.Models.Entities.Personeli.Staff", "Staff")
                        .WithMany()
                        .HasForeignKey("StaffId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Position");

                    b.Navigation("Staff");
                });

            modelBuilder.Entity("Mandegar.Models.Entities.Personeli.AssignTask", b =>
                {
                    b.HasOne("Mandegar.Models.Entities.Personeli.Position", "Position")
                        .WithMany("AssignTasks")
                        .HasForeignKey("PositionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Mandegar.Models.Entities.Personeli.Tasks", "Task")
                        .WithMany("AssignTasks")
                        .HasForeignKey("TaskId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Position");

                    b.Navigation("Task");
                });

            modelBuilder.Entity("Mandegar.Models.Entities.Personeli.Bank", b =>
                {
                    b.HasOne("Mandegar.Models.Entities.User.User", "CreatedBy")
                        .WithMany("BankCreatedBy")
                        .HasForeignKey("CreatedById")
                        .HasConstraintName("FK_Bank_Users_CreatedBy")
                        .IsRequired();

                    b.HasOne("Mandegar.Models.Entities.User.User", "ModifiedBy")
                        .WithMany("BankModifiedBy")
                        .HasForeignKey("ModifiedById")
                        .HasConstraintName("FK_Bank_Users_ModifiedBy");

                    b.Navigation("CreatedBy");

                    b.Navigation("ModifiedBy");
                });

            modelBuilder.Entity("Mandegar.Models.Entities.Personeli.BloodType", b =>
                {
                    b.HasOne("Mandegar.Models.Entities.User.User", "CreatedBy")
                        .WithMany("BloodTypeCreatedBy")
                        .HasForeignKey("CreatedById")
                        .HasConstraintName("FK_BloodType_Users_CreatedBy")
                        .IsRequired();

                    b.HasOne("Mandegar.Models.Entities.User.User", "ModifiedBy")
                        .WithMany("BloodTypeModifiedBy")
                        .HasForeignKey("ModifiedById")
                        .HasConstraintName("FK_BloodType_Users_ModifiedBy");

                    b.Navigation("CreatedBy");

                    b.Navigation("ModifiedBy");
                });

            modelBuilder.Entity("Mandegar.Models.Entities.Personeli.City", b =>
                {
                    b.HasOne("Mandegar.Models.Entities.User.User", "CreatedBy")
                        .WithMany("CityCreatedBy")
                        .HasForeignKey("CreatedById")
                        .HasConstraintName("FK_City_Users_CreatedBy")
                        .IsRequired();

                    b.HasOne("Mandegar.Models.Entities.User.User", "ModifiedBy")
                        .WithMany("CityModifiedBy")
                        .HasForeignKey("ModifiedById")
                        .HasConstraintName("FK_City_Users_ModifiedBy");

                    b.HasOne("Mandegar.Models.Entities.Personeli.Province", "Province")
                        .WithMany()
                        .HasForeignKey("ProvinceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CreatedBy");

                    b.Navigation("ModifiedBy");

                    b.Navigation("Province");
                });

            modelBuilder.Entity("Mandegar.Models.Entities.Personeli.Cooperation", b =>
                {
                    b.HasOne("Mandegar.Models.Entities.Personeli.CooperationType", "CooperationType")
                        .WithMany()
                        .HasForeignKey("CooperationTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Mandegar.Models.Entities.User.User", "CreatedBy")
                        .WithMany("CooperationCreatedBy")
                        .HasForeignKey("CreatedById")
                        .HasConstraintName("FK_Cooperation_Users_CreatedBy")
                        .IsRequired();

                    b.HasOne("Mandegar.Models.Entities.Departments.Department", "Department")
                        .WithMany()
                        .HasForeignKey("DepartmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Mandegar.Models.Entities.User.User", "ModifiedBy")
                        .WithMany("CooperationModifiedBy")
                        .HasForeignKey("ModifiedById")
                        .HasConstraintName("FK_Cooperation_Users_ModifiedBy");

                    b.HasOne("Mandegar.Models.Entities.Personeli.Staff", "Staff")
                        .WithMany()
                        .HasForeignKey("StaffId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CooperationType");

                    b.Navigation("CreatedBy");

                    b.Navigation("Department");

                    b.Navigation("ModifiedBy");

                    b.Navigation("Staff");
                });

            modelBuilder.Entity("Mandegar.Models.Entities.Personeli.CooperationType", b =>
                {
                    b.HasOne("Mandegar.Models.Entities.User.User", "CreatedBy")
                        .WithMany("CooperationTypeCreatedBy")
                        .HasForeignKey("CreatedById")
                        .HasConstraintName("FK_CooperationType_Users_CreatedBy")
                        .IsRequired();

                    b.HasOne("Mandegar.Models.Entities.User.User", "ModifiedBy")
                        .WithMany("CooperationTypeModifiedBy")
                        .HasForeignKey("ModifiedById")
                        .HasConstraintName("FK_CooperationType_Users_ModifiedBy");

                    b.Navigation("CreatedBy");

                    b.Navigation("ModifiedBy");
                });

            modelBuilder.Entity("Mandegar.Models.Entities.Personeli.Country", b =>
                {
                    b.HasOne("Mandegar.Models.Entities.User.User", "CreatedBy")
                        .WithMany("CountryCreatedBy")
                        .HasForeignKey("CreatedById")
                        .HasConstraintName("FK_Country_Users_CreatedBy")
                        .IsRequired();

                    b.HasOne("Mandegar.Models.Entities.User.User", "ModifiedBy")
                        .WithMany("CountryModifiedBy")
                        .HasForeignKey("ModifiedById")
                        .HasConstraintName("FK_Country_Users_ModifiedBy");

                    b.Navigation("CreatedBy");

                    b.Navigation("ModifiedBy");
                });

            modelBuilder.Entity("Mandegar.Models.Entities.Personeli.Education", b =>
                {
                    b.HasOne("Mandegar.Models.Entities.User.User", "CreatedBy")
                        .WithMany("EducationCreatedBy")
                        .HasForeignKey("CreatedById")
                        .HasConstraintName("FK_Education_Users_CreatedBy")
                        .IsRequired();

                    b.HasOne("Mandegar.Models.Entities.User.User", "ModifiedBy")
                        .WithMany("EducationModifiedBy")
                        .HasForeignKey("ModifiedById")
                        .HasConstraintName("FK_Education_Users_ModifiedBy");

                    b.Navigation("CreatedBy");

                    b.Navigation("ModifiedBy");
                });

            modelBuilder.Entity("Mandegar.Models.Entities.Personeli.EducationalQualification", b =>
                {
                    b.HasOne("Mandegar.Models.Entities.User.User", "CreatedBy")
                        .WithMany("EducationalQualificationCreatedBy")
                        .HasForeignKey("CreatedById")
                        .HasConstraintName("FK_EducationalQualification_Users_CreatedBy")
                        .IsRequired();

                    b.HasOne("Mandegar.Models.Entities.Personeli.StaffDocument", "StaffDocument")
                        .WithMany()
                        .HasForeignKey("DocumentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Mandegar.Models.Entities.Personeli.Education", "Education")
                        .WithMany()
                        .HasForeignKey("EducationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Mandegar.Models.Entities.User.User", "ModifiedBy")
                        .WithMany("EducationalQualificationModifiedBy")
                        .HasForeignKey("ModifiedById")
                        .HasConstraintName("FK_EducationalQualification_Users_ModifiedBy");

                    b.HasOne("Mandegar.Models.Entities.Personeli.Staff", "Staff")
                        .WithMany("EducationalQualifications")
                        .HasForeignKey("StaffId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("CreatedBy");

                    b.Navigation("Education");

                    b.Navigation("ModifiedBy");

                    b.Navigation("Staff");

                    b.Navigation("StaffDocument");
                });

            modelBuilder.Entity("Mandegar.Models.Entities.Personeli.InsuranceType", b =>
                {
                    b.HasOne("Mandegar.Models.Entities.User.User", "CreatedBy")
                        .WithMany("InsuranceTypeCreatedBy")
                        .HasForeignKey("CreatedById")
                        .HasConstraintName("FK_InsuranceType_Users_CreatedBy")
                        .IsRequired();

                    b.HasOne("Mandegar.Models.Entities.User.User", "ModifiedBy")
                        .WithMany("InsuranceTypeModifiedBy")
                        .HasForeignKey("ModifiedById")
                        .HasConstraintName("FK_InsuranceType_Users_ModifiedBy");

                    b.Navigation("CreatedBy");

                    b.Navigation("ModifiedBy");
                });

            modelBuilder.Entity("Mandegar.Models.Entities.Personeli.MaritalStatus", b =>
                {
                    b.HasOne("Mandegar.Models.Entities.User.User", "CreatedBy")
                        .WithMany("MaritalStatusCreatedBy")
                        .HasForeignKey("CreatedById")
                        .HasConstraintName("FK_MaritalStatus_Users_CreatedBy")
                        .IsRequired();

                    b.HasOne("Mandegar.Models.Entities.User.User", "ModifiedBy")
                        .WithMany("MaritalStatusModifiedBy")
                        .HasForeignKey("ModifiedById")
                        .HasConstraintName("FK_MaritalStatus_Users_ModifiedBy");

                    b.Navigation("CreatedBy");

                    b.Navigation("ModifiedBy");
                });

            modelBuilder.Entity("Mandegar.Models.Entities.Personeli.MilitaryServiceStatus", b =>
                {
                    b.HasOne("Mandegar.Models.Entities.User.User", "CreatedBy")
                        .WithMany("MilitaryServiceStatusCreatedBy")
                        .HasForeignKey("CreatedById")
                        .HasConstraintName("FK_MilitaryServiceStatus_Users_CreatedBy")
                        .IsRequired();

                    b.HasOne("Mandegar.Models.Entities.User.User", "ModifiedBy")
                        .WithMany("MilitaryServiceStatusModifiedBy")
                        .HasForeignKey("ModifiedById")
                        .HasConstraintName("FK_MilitaryServiceStatus_Users_ModifiedBy");

                    b.Navigation("CreatedBy");

                    b.Navigation("ModifiedBy");
                });

            modelBuilder.Entity("Mandegar.Models.Entities.Personeli.Nationality", b =>
                {
                    b.HasOne("Mandegar.Models.Entities.User.User", "CreatedBy")
                        .WithMany("NationalityCreatedBy")
                        .HasForeignKey("CreatedById")
                        .HasConstraintName("FK_Nationality_Users_CreatedBy")
                        .IsRequired();

                    b.HasOne("Mandegar.Models.Entities.User.User", "ModifiedBy")
                        .WithMany("NationalityModifiedBy")
                        .HasForeignKey("ModifiedById")
                        .HasConstraintName("FK_Nationality_Users_ModifiedBy");

                    b.Navigation("CreatedBy");

                    b.Navigation("ModifiedBy");
                });

            modelBuilder.Entity("Mandegar.Models.Entities.Personeli.Position", b =>
                {
                    b.HasOne("Mandegar.Models.Entities.User.User", "CreatedBy")
                        .WithMany("PositionCreatedBy")
                        .HasForeignKey("CreatedById")
                        .HasConstraintName("FK_Position_Users_CreatedBy")
                        .IsRequired();

                    b.HasOne("Mandegar.Models.Entities.User.User", "ModifiedBy")
                        .WithMany("PositionModifiedBy")
                        .HasForeignKey("ModifiedById")
                        .HasConstraintName("FK_Position_Users_ModifiedBy");

                    b.HasOne("Mandegar.Models.Entities.Personeli.Position", "Parent")
                        .WithMany("Positions")
                        .HasForeignKey("ParentId");

                    b.Navigation("CreatedBy");

                    b.Navigation("ModifiedBy");

                    b.Navigation("Parent");
                });

            modelBuilder.Entity("Mandegar.Models.Entities.Personeli.Province", b =>
                {
                    b.HasOne("Mandegar.Models.Entities.Personeli.Country", "Country")
                        .WithMany()
                        .HasForeignKey("CountryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Mandegar.Models.Entities.User.User", "CreatedBy")
                        .WithMany("ProvinceCreatedBy")
                        .HasForeignKey("CreatedById")
                        .HasConstraintName("FK_Province_Users_CreatedBy")
                        .IsRequired();

                    b.HasOne("Mandegar.Models.Entities.User.User", "ModifiedBy")
                        .WithMany("ProvinceModifiedBy")
                        .HasForeignKey("ModifiedById")
                        .HasConstraintName("FK_Province_Users_ModifiedBy");

                    b.Navigation("Country");

                    b.Navigation("CreatedBy");

                    b.Navigation("ModifiedBy");
                });

            modelBuilder.Entity("Mandegar.Models.Entities.Personeli.Relation", b =>
                {
                    b.HasOne("Mandegar.Models.Entities.User.User", "CreatedBy")
                        .WithMany("RelationCreatedBy")
                        .HasForeignKey("CreatedById")
                        .HasConstraintName("FK_Relation_Users_CreatedBy")
                        .IsRequired();

                    b.HasOne("Mandegar.Models.Entities.User.User", "ModifiedBy")
                        .WithMany("RelationModifiedBy")
                        .HasForeignKey("ModifiedById")
                        .HasConstraintName("FK_Relation_Users_ModifiedBy");

                    b.Navigation("CreatedBy");

                    b.Navigation("ModifiedBy");
                });

            modelBuilder.Entity("Mandegar.Models.Entities.Personeli.Religion", b =>
                {
                    b.HasOne("Mandegar.Models.Entities.User.User", "CreatedBy")
                        .WithMany("ReligionCreatedBy")
                        .HasForeignKey("CreatedById")
                        .HasConstraintName("FK_Religion_Users_CreatedBy")
                        .IsRequired();

                    b.HasOne("Mandegar.Models.Entities.User.User", "ModifiedBy")
                        .WithMany("ReligionModifiedBy")
                        .HasForeignKey("ModifiedById")
                        .HasConstraintName("FK_Religion_Users_ModifiedBy");

                    b.Navigation("CreatedBy");

                    b.Navigation("ModifiedBy");
                });

            modelBuilder.Entity("Mandegar.Models.Entities.Personeli.Resume", b =>
                {
                    b.HasOne("Mandegar.Models.Entities.BaseInfo.AcademicYear", "AcademicYear")
                        .WithMany()
                        .HasForeignKey("AcademicYearId");

                    b.HasOne("Mandegar.Models.Entities.Personeli.ActivityField", "ActivityField")
                        .WithMany()
                        .HasForeignKey("ActivityFieldId");

                    b.HasOne("Mandegar.Models.Entities.Personeli.CooperationType", "CooperationType")
                        .WithMany()
                        .HasForeignKey("CooperationTypeId");

                    b.HasOne("Mandegar.Models.Entities.User.User", "CreatedBy")
                        .WithMany("ResumeCreatedBy")
                        .HasForeignKey("CreatedById")
                        .HasConstraintName("FK_Resume_Users_CreatedBy")
                        .IsRequired();

                    b.HasOne("Mandegar.Models.Entities.User.User", "ModifiedBy")
                        .WithMany("ResumeModifiedBy")
                        .HasForeignKey("ModifiedById")
                        .HasConstraintName("FK_Resume_Users_ModifiedBy");

                    b.HasOne("Mandegar.Models.Entities.Personeli.Position", "Position")
                        .WithMany()
                        .HasForeignKey("PositionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Mandegar.Models.Entities.Personeli.Staff", "Staff")
                        .WithMany()
                        .HasForeignKey("StaffId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Mandegar.Models.Entities.Personeli.WorkExperienceType", "WorkExperienceType")
                        .WithMany()
                        .HasForeignKey("WorkExperienceTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AcademicYear");

                    b.Navigation("ActivityField");

                    b.Navigation("CooperationType");

                    b.Navigation("CreatedBy");

                    b.Navigation("ModifiedBy");

                    b.Navigation("Position");

                    b.Navigation("Staff");

                    b.Navigation("WorkExperienceType");
                });

            modelBuilder.Entity("Mandegar.Models.Entities.Personeli.Sacrifice", b =>
                {
                    b.HasOne("Mandegar.Models.Entities.User.User", "CreatedBy")
                        .WithMany("SacrificeCreatedBy")
                        .HasForeignKey("CreatedById")
                        .HasConstraintName("FK_Sacrifice_Users_CreatedBy")
                        .IsRequired();

                    b.HasOne("Mandegar.Models.Entities.User.User", "ModifiedBy")
                        .WithMany("SacrificeModifiedBy")
                        .HasForeignKey("ModifiedById")
                        .HasConstraintName("FK_Sacrifice_Users_ModifiedBy");

                    b.HasOne("Mandegar.Models.Entities.Personeli.Relation", "Relation")
                        .WithMany()
                        .HasForeignKey("RelationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Mandegar.Models.Entities.Personeli.Staff", "Staff")
                        .WithMany()
                        .HasForeignKey("StaffId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CreatedBy");

                    b.Navigation("ModifiedBy");

                    b.Navigation("Relation");

                    b.Navigation("Staff");
                });

            modelBuilder.Entity("Mandegar.Models.Entities.Personeli.Staff", b =>
                {
                    b.HasOne("Mandegar.Models.Entities.Personeli.City", "BirthCity")
                        .WithMany()
                        .HasForeignKey("BirthCityId");

                    b.HasOne("Mandegar.Models.Entities.User.User", "CreatedBy")
                        .WithMany("StaffCreatedBy")
                        .HasForeignKey("CreatedById")
                        .HasConstraintName("FK_Staff_Users_CreatedBy")
                        .IsRequired();

                    b.HasOne("Mandegar.Models.Entities.Personeli.City", "IdentityIssueCity")
                        .WithMany()
                        .HasForeignKey("IdentityIssueCityId");

                    b.HasOne("Mandegar.Models.Entities.User.User", "ModifiedBy")
                        .WithMany("StaffModifiedBy")
                        .HasForeignKey("ModifiedById")
                        .HasConstraintName("FK_Staff_Users_ModifiedBy");

                    b.Navigation("BirthCity");

                    b.Navigation("CreatedBy");

                    b.Navigation("IdentityIssueCity");

                    b.Navigation("ModifiedBy");
                });

            modelBuilder.Entity("Mandegar.Models.Entities.Personeli.StaffAddress", b =>
                {
                    b.HasOne("Mandegar.Models.Entities.Personeli.AddressType", "AddressType")
                        .WithMany()
                        .HasForeignKey("AddressTypeId");

                    b.HasOne("Mandegar.Models.Entities.User.User", "CreatedBy")
                        .WithMany("StaffAddressCreatedBy")
                        .HasForeignKey("CreatedById")
                        .HasConstraintName("FK_StaffAddress_Users_CreatedBy")
                        .IsRequired();

                    b.HasOne("Mandegar.Models.Entities.User.User", "ModifiedBy")
                        .WithMany("StaffAddressModifiedBy")
                        .HasForeignKey("ModifiedById")
                        .HasConstraintName("FK_StaffAddress_Users_ModifiedBy");

                    b.HasOne("Mandegar.Models.Entities.Personeli.Staff", "Staff")
                        .WithMany()
                        .HasForeignKey("StaffId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AddressType");

                    b.Navigation("CreatedBy");

                    b.Navigation("ModifiedBy");

                    b.Navigation("Staff");
                });

            modelBuilder.Entity("Mandegar.Models.Entities.Personeli.StaffComplementary", b =>
                {
                    b.HasOne("Mandegar.Models.Entities.Personeli.BloodType", "BloodType")
                        .WithMany()
                        .HasForeignKey("BloodTypeId");

                    b.HasOne("Mandegar.Models.Entities.User.User", "CreatedBy")
                        .WithMany("StaffComplementaryCreatedBy")
                        .HasForeignKey("CreatedById")
                        .HasConstraintName("FK_StaffComplementary_Users_CreatedBy")
                        .IsRequired();

                    b.HasOne("Mandegar.Models.Entities.Personeli.InsuranceType", "InsuranceType")
                        .WithMany()
                        .HasForeignKey("InsuranceTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Mandegar.Models.Entities.Personeli.MaritalStatus", "MaritalStatus")
                        .WithMany()
                        .HasForeignKey("MaritalStatusId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Mandegar.Models.Entities.Personeli.MilitaryServiceStatus", "MilitaryServiceStatus")
                        .WithMany()
                        .HasForeignKey("MilitaryServiceStatusId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Mandegar.Models.Entities.User.User", "ModifiedBy")
                        .WithMany("StaffComplementaryModifiedBy")
                        .HasForeignKey("ModifiedById")
                        .HasConstraintName("FK_StaffComplementary_Users_ModifiedBy");

                    b.HasOne("Mandegar.Models.Entities.Personeli.Nationality", "Nationality")
                        .WithMany()
                        .HasForeignKey("NationalityId");

                    b.HasOne("Mandegar.Models.Entities.Personeli.Religion", "Religion")
                        .WithMany()
                        .HasForeignKey("ReligionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Mandegar.Models.Entities.Personeli.Staff", "Staff")
                        .WithMany()
                        .HasForeignKey("StaffId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("BloodType");

                    b.Navigation("CreatedBy");

                    b.Navigation("InsuranceType");

                    b.Navigation("MaritalStatus");

                    b.Navigation("MilitaryServiceStatus");

                    b.Navigation("ModifiedBy");

                    b.Navigation("Nationality");

                    b.Navigation("Religion");

                    b.Navigation("Staff");
                });

            modelBuilder.Entity("Mandegar.Models.Entities.Personeli.StaffDocument", b =>
                {
                    b.HasOne("Mandegar.Models.Entities.User.User", "CreatedBy")
                        .WithMany("StaffDocumentCreatedBy")
                        .HasForeignKey("CreatedById")
                        .HasConstraintName("FK_StaffDocument_Users_CreatedBy")
                        .IsRequired();

                    b.HasOne("Mandegar.Models.Entities.User.User", "ModifiedBy")
                        .WithMany("StaffDocumentModifiedBy")
                        .HasForeignKey("ModifiedById")
                        .HasConstraintName("FK_StaffDocument_Users_ModifiedBy");

                    b.HasOne("Mandegar.Models.Entities.Personeli.Staff", "Staff")
                        .WithMany()
                        .HasForeignKey("StaffId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CreatedBy");

                    b.Navigation("ModifiedBy");

                    b.Navigation("Staff");
                });

            modelBuilder.Entity("Mandegar.Models.Entities.Personeli.StaffFamilyInformation", b =>
                {
                    b.HasOne("Mandegar.Models.Entities.User.User", "CreatedBy")
                        .WithMany("StaffFamilyInformationCreatedBy")
                        .HasForeignKey("CreatedById")
                        .HasConstraintName("FK_StaffFamilyInformation_Users_CreatedBy")
                        .IsRequired();

                    b.HasOne("Mandegar.Models.Entities.Personeli.Education", "Education")
                        .WithMany()
                        .HasForeignKey("EducationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Mandegar.Models.Entities.Personeli.MaritalStatus", "MaritalStatus")
                        .WithMany()
                        .HasForeignKey("MaritalStatusId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Mandegar.Models.Entities.User.User", "ModifiedBy")
                        .WithMany("StaffFamilyInformationModifiedBy")
                        .HasForeignKey("ModifiedById")
                        .HasConstraintName("FK_StaffFamilyInformation_Users_ModifiedBy");

                    b.HasOne("Mandegar.Models.Entities.Personeli.Relation", "Relation")
                        .WithMany()
                        .HasForeignKey("RelationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Mandegar.Models.Entities.Personeli.Staff", "Staff")
                        .WithMany()
                        .HasForeignKey("StaffId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CreatedBy");

                    b.Navigation("Education");

                    b.Navigation("MaritalStatus");

                    b.Navigation("ModifiedBy");

                    b.Navigation("Relation");

                    b.Navigation("Staff");
                });

            modelBuilder.Entity("Mandegar.Models.Entities.Personeli.StaffFinancial", b =>
                {
                    b.HasOne("Mandegar.Models.Entities.Personeli.Bank", "Bank")
                        .WithMany()
                        .HasForeignKey("BankId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Mandegar.Models.Entities.User.User", "CreatedBy")
                        .WithMany("StaffFinancialCreatedBy")
                        .HasForeignKey("CreatedById")
                        .HasConstraintName("FK_StaffFinancial_Users_CreatedBy")
                        .IsRequired();

                    b.HasOne("Mandegar.Models.Entities.User.User", "ModifiedBy")
                        .WithMany("StaffFinancialModifiedBy")
                        .HasForeignKey("ModifiedById")
                        .HasConstraintName("FK_StaffFinancial_Users_ModifiedBy");

                    b.HasOne("Mandegar.Models.Entities.Personeli.Staff", "Staff")
                        .WithMany()
                        .HasForeignKey("StaffId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Bank");

                    b.Navigation("CreatedBy");

                    b.Navigation("ModifiedBy");

                    b.Navigation("Staff");
                });

            modelBuilder.Entity("Mandegar.Models.Entities.Personeli.TaskGroup", b =>
                {
                    b.HasOne("Mandegar.Models.Entities.User.User", "CreatedBy")
                        .WithMany("TaskGroupCreatedBy")
                        .HasForeignKey("CreatedById")
                        .HasConstraintName("FK_TaskGroup_Users_CreatedBy")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Mandegar.Models.Entities.User.User", "ModifiedBy")
                        .WithMany("TaskGroupModifiedBy")
                        .HasForeignKey("ModifiedById")
                        .HasConstraintName("FK_TaskGroup_Users_ModifiedBy");

                    b.Navigation("CreatedBy");

                    b.Navigation("ModifiedBy");
                });

            modelBuilder.Entity("Mandegar.Models.Entities.Personeli.Tasks", b =>
                {
                    b.HasOne("Mandegar.Models.Entities.User.User", "CreatedBy")
                        .WithMany("TaskCreatedBy")
                        .HasForeignKey("CreatedById")
                        .HasConstraintName("FK_Task_Users_CreatedBy")
                        .IsRequired();

                    b.HasOne("Mandegar.Models.Entities.User.User", "ModifiedBy")
                        .WithMany("TaskModifiedBy")
                        .HasForeignKey("ModifiedById")
                        .HasConstraintName("FK_Task_Users_ModifiedBy");

                    b.HasOne("Mandegar.Models.Entities.Personeli.TaskGroup", "TaskGroup")
                        .WithMany("Tasks")
                        .HasForeignKey("TaskGroupId")
                        .HasConstraintName("FK_Task_TaskGroup")
                        .IsRequired();

                    b.Navigation("CreatedBy");

                    b.Navigation("ModifiedBy");

                    b.Navigation("TaskGroup");
                });

            modelBuilder.Entity("Mandegar.Models.Entities.Personeli.WorkExperienceType", b =>
                {
                    b.HasOne("Mandegar.Models.Entities.User.User", "CreatedBy")
                        .WithMany("WorkExperienceTypeCreatedBy")
                        .HasForeignKey("CreatedById")
                        .HasConstraintName("FK_WorkExperienceType_Users_CreatedBy")
                        .IsRequired();

                    b.HasOne("Mandegar.Models.Entities.User.User", "ModifiedBy")
                        .WithMany("WorkExperienceTypeModifiedBy")
                        .HasForeignKey("ModifiedById")
                        .HasConstraintName("FK_WorkExperienceType_Users_ModifiedBy");

                    b.Navigation("CreatedBy");

                    b.Navigation("ModifiedBy");
                });

            modelBuilder.Entity("Mandegar.Models.Entities.User.Permission", b =>
                {
                    b.HasOne("Mandegar.Models.Entities.User.Permission", null)
                        .WithMany("Permissions")
                        .HasForeignKey("ParentId");
                });

            modelBuilder.Entity("Mandegar.Models.Entities.User.Profile", b =>
                {
                    b.HasOne("Mandegar.Models.Entities.User.User", "User")
                        .WithOne("Profile")
                        .HasForeignKey("Mandegar.Models.Entities.User.Profile", "UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("Mandegar.Models.Entities.User.Role", b =>
                {
                    b.HasOne("Mandegar.Models.Entities.User.User", "CreatedBy")
                        .WithMany("RoleCreatedBy")
                        .HasForeignKey("CreatedById")
                        .HasConstraintName("FK_Role_Users_CreatedBy")
                        .IsRequired();

                    b.HasOne("Mandegar.Models.Entities.User.User", "ModifiedBy")
                        .WithMany("RoleModifiedBy")
                        .HasForeignKey("ModifiedById")
                        .HasConstraintName("FK_Role_Users_ModifiedBy");

                    b.Navigation("CreatedBy");

                    b.Navigation("ModifiedBy");
                });

            modelBuilder.Entity("Mandegar.Models.Entities.User.RolePermission", b =>
                {
                    b.HasOne("Mandegar.Models.Entities.User.Permission", "Permission")
                        .WithMany("RolePermission")
                        .HasForeignKey("PermissionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Mandegar.Models.Entities.User.Role", "Role")
                        .WithMany("RolePermissions")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Permission");

                    b.Navigation("Role");
                });

            modelBuilder.Entity("Mandegar.Models.Entities.User.User", b =>
                {
                    b.HasOne("Mandegar.Models.Entities.User.User", "ModifiedBy")
                        .WithMany("Users")
                        .HasForeignKey("ModifiedById");

                    b.Navigation("ModifiedBy");
                });

            modelBuilder.Entity("Mandegar.Models.Entities.User.UserRole", b =>
                {
                    b.HasOne("Mandegar.Models.Entities.User.Role", "Role")
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Mandegar.Models.Entities.User.User", "User")
                        .WithMany("UserRoles")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Role");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Mandegar.Models.Entities.Departments.Department", b =>
                {
                    b.Navigation("DepartmentMeetingMembers");

                    b.Navigation("Departments");
                });

            modelBuilder.Entity("Mandegar.Models.Entities.Departments.DepartmentActivity", b =>
                {
                    b.Navigation("DepartmentActivityMembers");
                });

            modelBuilder.Entity("Mandegar.Models.Entities.Departments.DepartmentMeeting", b =>
                {
                    b.Navigation("DepartmentMeetingMembers");
                });

            modelBuilder.Entity("Mandegar.Models.Entities.Departments.DepartmentMeetingMember", b =>
                {
                    b.Navigation("MeetingMembers");
                });

            modelBuilder.Entity("Mandegar.Models.Entities.Departments.DepartmentMember", b =>
                {
                    b.Navigation("DepartmentActivityMembers");

                    b.Navigation("DepartmentMeetingMembers");

                    b.Navigation("MeetingMembers");
                });

            modelBuilder.Entity("Mandegar.Models.Entities.Personeli.Position", b =>
                {
                    b.Navigation("AssignTasks");

                    b.Navigation("Positions");
                });

            modelBuilder.Entity("Mandegar.Models.Entities.Personeli.Staff", b =>
                {
                    b.Navigation("EducationalQualifications");
                });

            modelBuilder.Entity("Mandegar.Models.Entities.Personeli.TaskGroup", b =>
                {
                    b.Navigation("Tasks");
                });

            modelBuilder.Entity("Mandegar.Models.Entities.Personeli.Tasks", b =>
                {
                    b.Navigation("AssignTasks");
                });

            modelBuilder.Entity("Mandegar.Models.Entities.User.Permission", b =>
                {
                    b.Navigation("Permissions");

                    b.Navigation("RolePermission");
                });

            modelBuilder.Entity("Mandegar.Models.Entities.User.Role", b =>
                {
                    b.Navigation("RolePermissions");
                });

            modelBuilder.Entity("Mandegar.Models.Entities.User.User", b =>
                {
                    b.Navigation("AcademicYearCreatedBy");

                    b.Navigation("AcademicYearModifiedBy");

                    b.Navigation("ActivityCaseCreatedBy");

                    b.Navigation("ActivityCaseModifiedBy");

                    b.Navigation("ActivityCreatedBy");

                    b.Navigation("ActivityFieldCreatedBy");

                    b.Navigation("ActivityFieldModifiedBy");

                    b.Navigation("ActivityModifiedBy");

                    b.Navigation("ActivityTypeCreatedBy");

                    b.Navigation("ActivityTypeModifiedBy");

                    b.Navigation("AddressTypeCreatedBy");

                    b.Navigation("AddressTypeModifiedBy");

                    b.Navigation("BankCreatedBy");

                    b.Navigation("BankModifiedBy");

                    b.Navigation("BloodTypeCreatedBy");

                    b.Navigation("BloodTypeModifiedBy");

                    b.Navigation("CityCreatedBy");

                    b.Navigation("CityModifiedBy");

                    b.Navigation("ClassCreatedBy");

                    b.Navigation("ClassModifiedBy");

                    b.Navigation("CooperationCreatedBy");

                    b.Navigation("CooperationModifiedBy");

                    b.Navigation("CooperationTypeCreatedBy");

                    b.Navigation("CooperationTypeModifiedBy");

                    b.Navigation("CountryCreatedBy");

                    b.Navigation("CountryModifiedBy");

                    b.Navigation("DepartmentActivityCreatedBy");

                    b.Navigation("DepartmentActivityModifiedBy");

                    b.Navigation("DepartmentActivityTypeCreatedBy");

                    b.Navigation("DepartmentActivityTypeModifiedBy");

                    b.Navigation("DepartmentCreatedBy");

                    b.Navigation("DepartmentEvaluationGroupCreatedBy");

                    b.Navigation("DepartmentEvaluationGroupModifiedBy");

                    b.Navigation("DepartmentMeetingAttendeesCreatedBy");

                    b.Navigation("DepartmentMeetingAttendeesModifiedBy");

                    b.Navigation("DepartmentMeetingCreatedBy");

                    b.Navigation("DepartmentMeetingMemberCreatedBy");

                    b.Navigation("DepartmentMeetingMemberModifiedBy");

                    b.Navigation("DepartmentMeetingModifiedBy");

                    b.Navigation("DepartmentMemberCreatedBy");

                    b.Navigation("DepartmentMemberModifiedBy");

                    b.Navigation("DepartmentModifiedBy");

                    b.Navigation("DepartmentScheduleCreatedBy");

                    b.Navigation("DepartmentScheduleModifiedBy");

                    b.Navigation("DocumentCreatedBy");

                    b.Navigation("DocumentModifiedBy");

                    b.Navigation("EducationalQualificationCreatedBy");

                    b.Navigation("EducationalQualificationModifiedBy");

                    b.Navigation("EducationCreatedBy");

                    b.Navigation("EducationModifiedBy");

                    b.Navigation("EvaluationCourseCreatedBy");

                    b.Navigation("EvaluationCourseModifiedBy");

                    b.Navigation("EvaluationIndicatorsCreatedBy");

                    b.Navigation("EvaluationIndicatorsModifiedBy");

                    b.Navigation("EventCreatedBy");

                    b.Navigation("EventModifiedBy");

                    b.Navigation("EventTypeCreatedBy");

                    b.Navigation("EventTypeModifiedBy");

                    b.Navigation("ExecutiveCalendarCreatedBy");

                    b.Navigation("ExecutiveCalendarModifiedBy");

                    b.Navigation("InsuranceTypeCreatedBy");

                    b.Navigation("InsuranceTypeModifiedBy");

                    b.Navigation("LessonCreatedBy");

                    b.Navigation("LessonModifiedBy");

                    b.Navigation("LessonTypeCreatedBy");

                    b.Navigation("LessonTypeModifiedBy");

                    b.Navigation("MaritalStatusCreatedBy");

                    b.Navigation("MaritalStatusModifiedBy");

                    b.Navigation("MeetingMemberCreatedBy");

                    b.Navigation("MeetingMemberModifiedBy");

                    b.Navigation("MilitaryServiceStatusCreatedBy");

                    b.Navigation("MilitaryServiceStatusModifiedBy");

                    b.Navigation("NationalityCreatedBy");

                    b.Navigation("NationalityModifiedBy");

                    b.Navigation("PositionCreatedBy");

                    b.Navigation("PositionModifiedBy");

                    b.Navigation("ProceedingsDepartmentCreatedBy");

                    b.Navigation("ProceedingsDepartmentModifiedBy");

                    b.Navigation("Profile");

                    b.Navigation("ProvinceCreatedBy");

                    b.Navigation("ProvinceModifiedBy");

                    b.Navigation("RelationCreatedBy");

                    b.Navigation("RelationModifiedBy");

                    b.Navigation("ReligionCreatedBy");

                    b.Navigation("ReligionModifiedBy");

                    b.Navigation("ResumeCreatedBy");

                    b.Navigation("ResumeModifiedBy");

                    b.Navigation("RoleCreatedBy");

                    b.Navigation("RoleModifiedBy");

                    b.Navigation("SacrificeCreatedBy");

                    b.Navigation("SacrificeModifiedBy");

                    b.Navigation("SecretaryScoreCreatedBy");

                    b.Navigation("SecretaryScoreModifiedBy");

                    b.Navigation("SessionApprovalsCreatedBy");

                    b.Navigation("SessionApprovalsModifiedBy");

                    b.Navigation("StaffAddressCreatedBy");

                    b.Navigation("StaffAddressModifiedBy");

                    b.Navigation("StaffComplementaryCreatedBy");

                    b.Navigation("StaffComplementaryModifiedBy");

                    b.Navigation("StaffCreatedBy");

                    b.Navigation("StaffDocumentCreatedBy");

                    b.Navigation("StaffDocumentModifiedBy");

                    b.Navigation("StaffFamilyInformationCreatedBy");

                    b.Navigation("StaffFamilyInformationModifiedBy");

                    b.Navigation("StaffFinancialCreatedBy");

                    b.Navigation("StaffFinancialModifiedBy");

                    b.Navigation("StaffModifiedBy");

                    b.Navigation("StudyDegreeCreatedBy");

                    b.Navigation("StudyDegreeModifiedBy");

                    b.Navigation("StudyFieldCreatedBy");

                    b.Navigation("StudyFieldModifiedBy");

                    b.Navigation("StudyGradeCreatedBy");

                    b.Navigation("StudyGradeModifiedBy");

                    b.Navigation("TaskCreatedBy");

                    b.Navigation("TaskGroupCreatedBy");

                    b.Navigation("TaskGroupModifiedBy");

                    b.Navigation("TaskModifiedBy");

                    b.Navigation("TopicCreatedBy");

                    b.Navigation("TopicModifiedBy");

                    b.Navigation("UserRoles");

                    b.Navigation("Users");

                    b.Navigation("WorkExperienceTypeCreatedBy");

                    b.Navigation("WorkExperienceTypeModifiedBy");

                    b.Navigation("YearClassCreatedBy");

                    b.Navigation("YearClassModifiedBy");
                });
#pragma warning restore 612, 618
        }
    }
}
